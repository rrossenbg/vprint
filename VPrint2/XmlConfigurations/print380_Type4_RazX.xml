<?xml version="1.0" encoding="utf-8"?>
<!-- FORMAT 4 (ITALY) BIG -->
<VoucherPrintLayoutRazX xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <DocumentInitialization />
  <FormLength>54</FormLength>
  <PageCount>3</PageCount>
  <PageSize>
    <Width>827</Width>
    <Height>850</Height>
    <!-- was 1200 1275 2000 http://www.photokaboom.com/photography/learn/printing/1_calculators.htm -->
    <!-- 850, 750, 827  -->
  </PageSize>
  <Landscape>false</Landscape>
  <!-- Name of the template. Should be unique for the system.  -->
  <TemplateName>31234567-44D1-40AA-8888-26511919AAAA</TemplateName>
  <Context>
    <![CDATA[
@{
    //Please no code into the body tag!
    //Only variables
    //CONSTANTS
    //BARCODE
    var id = Model.Retailer.Id;
    var barcodeNumber = Model.StrVoucherNo.Replace(" ", "").Substring(3);    
    var barcodeText = Model.StrVoucherNo.Replace(" ", "");
    
    //RETAILER
    var shopName = Model.Retailer.Name;
    var voucher = Model.VoucherNo;
    var checkDig = Model.Printing.CalculateCheckDigit(Model.VoucherNo);
    var voucherNumber = string.Concat(Model.VoucherNo, checkDig);   
    var line1 = Model.Retailer.RetailAddress.Line1;
    var line2 = Model.Retailer.RetailAddress.Line2;
    var line3 = Model.Retailer.RetailAddress.Line3;
    var line5 = Model.Retailer.RetailAddress.Line5;
    
    var officeData = Model.Manager.RetrieveTableData("ho_pfs, ho_Certificate_1, ho_Certificate_2, ho_Certificate_3, ho_category_title,ho_add_id", "HeadOffice", 
        "where ho_id={0} and ho_iso_id={1}".format(Model.Retailer.HeadOfficeId, Model.Office.CountryId));
    var branchData = Model.Manager.RetrieveTableData("br_category, br_pfs", "Branch", 
        "where br_id={0} and br_iso_id={1}".format(Model.Retailer.Id, Model.Retailer.CountryId));
    
    //OFFICE
    var officeName = Model.Retailer.HeadOfficeName;
    var hoData = Model.Manager.RetrieveTableData("hoa_add_1,hoa_add_2,hoa_add_3,hoa_add_4,hoa_add_5,hoa_add_6", "HeadOfficeAddress", 
        "where hoa_id = {0} ".format(officeData.Length > 5? officeData[5]: "0"));

    var oLine1 = Convert.ToString(hoData.Length > 0 ? hoData[0]: "");
    var oLine2 = Convert.ToString(hoData.Length > 1 ? hoData[1]: "");
    var oLine3 = Convert.ToString(hoData.Length > 2 ? hoData[2]: "");
    var oLine5 = Convert.ToString(hoData.Length > 4 ? hoData[4]: "");
    
    //CERTIFICATES
    var certificate1 = Convert.ToString(officeData.Length > 1? officeData[1]: "");
    var certificate2 = Convert.ToString(officeData.Length > 2? officeData[2]: "");
    var certificate3 = Convert.ToString(officeData.Length > 3? officeData[3]: "");
    var category = Convert.ToString(officeData.Length > 4? officeData[4]: "");
    var vatNumber = Model.Retailer.VatNumber;
    
    var value = string.Format(
    "Shop Code: {0}\r\n" +
    "Doc nr: S-IT-380-10-{0}-{1}-{2}\r\n" +
    "{3}\r\n" +
    "{4}\r\n" +
    "{5} {6}\r\n" +
    "{7}\r\n" +
    "{8}\r\n" +
    "{9}\t{10}\r\n" +
    "P.I: {11}\r\n" +
    "C.F./REG.IMP.: {12}\r\n" + 
    "N.REA: {13,-30} CAP.SOC: {14}",
                                  id, voucher, checkDig,
                                  shopName,
                                  line1,
                                  line5, line3,
                                  officeName,
                                  oLine1,
                                  oLine5, oLine3,
                                  vatNumber,
                                  certificate1,
                                  certificate3, certificate2).EscapeXml();
}  
<?xml version="1.0" encoding="utf-8"?>
<VoucherPrintRazX xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Barcodes>
    <BarPrintLine>
      <X>450</X>
      <Y>10</Y>
      <Text>@barcodeNumber</Text>
      <Height>45</Height>
      <Size>2</Size>
      <BarText> 
        <X>2</X>
        <Y>2</Y>
        <Size>0</Size>
        <Text>@barcodeText</Text>
        <Font>
          <Value>Arial, 8pt</Value>
        </Font>
      </BarText>
    </BarPrintLine>
  </Barcodes>
  <Lines>
    <!-- Value -->
    <GPrintLine>
      <X>420</X>
      <Y>630</Y>
      <Size>0</Size>
      <Text>@value</Text>
      <Font>
        <Value>Arial, 10pt</Value>
      </Font>
    </GPrintLine>
  </Lines>
</VoucherPrintRazX>

]]>
  </Context>
</VoucherPrintLayoutRazX>