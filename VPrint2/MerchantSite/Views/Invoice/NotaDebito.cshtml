@using MerchantSite.Models
@using MerchantSite.Data
@using GridMvc
@using GridMvc.Html
@model NotaDebito_Model
@{
    ViewBag.Title = "NotaDebito";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section script_declarations{
    <link rel="stylesheet" href="/resources/demos/style.css" />
    <script type="text/javascript">

        $(function () {
            $(".datepicker").datepicker({ dateFormat: 'dd-mm-yy' });
        });

        /*
        $(document).ready(function () {

        $('#Country').change(function () {
        $.ajax({
        type: 'POST',
        url: '@Url.Action("SelectHeadOffices", 0)',
        data: { value: $(this).val() },
        success: function (data) {
        var markup = '';
        for (var x = 0; x < data.length; x++) {
        markup += '<option value="' + data[x].Value + '">' + data[x].Text + '</option>';
        }
        $('#HeadOffice').html(markup).show();
        }
        });
        });

        $('#HeadOffice').change(function () {
        $.ajax({
        type: 'POST',
        url: '@Url.Action("SelectRetailers", 0)',
        data: { value: $('#Country').val() + ";" + $(this).val() },
        success: function (data) {
        var markup = '';
        for (var x = 0; x < data.length; x++) {
        markup += '<option value="' + data[x].Value + '">' + data[x].Text + '</option>';
        }
        $('#Retailer').html(markup).show();
        }
        });
        });
        });
        */

    </script>
}
<h2>NotaDebito</h2> 
@using (Html.BeginForm("NotaDebito", "Invoice", FormMethod.Post))
{
    @Html.ValidationSummary(true)
            <table> 
            <tr>
            <td colspan=3>
                <label>
                    Country</label>@Html.DropDownListFor(model => model.Country, (IEnumerable<SelectListItem>)ViewData["CountryList"], new { style = "width: 185px" })
                    @Html.ValidationMessageFor(model => model.Country)
            </td>
            <!--
            <td>
                <label>
                    Head Office</label>
                    @Html.DropDownListFor(model => model.HeadOffice, (IEnumerable<SelectListItem>)ViewData["HeadOfficeList"], new { style = "display:none; width: 185px;" })
                    @Html.ValidationMessageFor(model => model.HeadOffice)
            </td>
            <td>
                <label>
                    Retailer</label>
                    @Html.DropDownListFor(model => model.Retailer, (IEnumerable<SelectListItem>)ViewData["RetailerList"], new { style = "display:none; width: 185px;" })
                    @Html.ValidationMessageFor(model => model.Retailer)
            </td>
            -->
        </tr>
        <tr>
            <td>
                <label>
                    From Date</label>@Html.TextBoxFor(model => model.FromDate, new { style = "width: 105px", @class = "datepicker" })
                    @Html.ValidationMessageFor(model => model.FromDate)
            </td>
            <td>
                <label>
                    To Date</label>@Html.TextBoxFor(model => model.ToDate, new { style = "width: 105px", @class = "datepicker" })
                    @Html.ValidationMessageFor(model => model.ToDate)
            </td>
            <td>
                <input type="submit" value="Search" />
            </td>
        </tr>
</table>
    if (ViewData["NotaDebitoList"] != null)
      {
          @Html.Raw("<div style=\"width: 600px;\">");
          @Html.Grid((IEnumerable<PTFDataAccess.SelectForNotaDebitos_Data>)ViewData["NotaDebitoList"]).Columns(columns =>
          {
              columns.Add(c => c.in_number).Titled("Number").Sanitized(false).Encoded(false)
                  .RenderValueAs(c => Html.ActionLink("Download", "DownloadNotaDebito", "Invoice", new { country = c.in_iso, office = c.in_ho_id, date = c.in_date, invoice = c.in_number }, null).ToHtmlString());
              columns.Add(c => c.in_date).Titled("Date").Filterable(true);
              columns.Add(c => c.in_ho_id).Titled("Head office");
              columns.Add(c => c.ho_name).Titled("Name").Filterable(true);
              columns.Add(c => c.in_period).Titled("Period").Filterable(true);
              columns.Add(c => c.in_type).Titled("Type").Filterable(true);
              columns.Add(c => c.total).Titled("Total");
          }).WithPaging(10).Sortable(true);
          @Html.Raw("</div>");
      }
}