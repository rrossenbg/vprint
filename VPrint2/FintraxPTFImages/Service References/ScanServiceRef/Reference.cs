//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FintraxPTFImages.ScanServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class VoucherInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ScanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BarCode {
            get {
                return this.BarCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BarCodeField, value) != true)) {
                    this.BarCodeField = value;
                    this.RaisePropertyChanged("BarCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperatorId {
            get {
                return this.OperatorIdField;
            }
            set {
                if ((this.OperatorIdField.Equals(value) != true)) {
                    this.OperatorIdField = value;
                    this.RaisePropertyChanged("OperatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ScanDate {
            get {
                return this.ScanDateField;
            }
            set {
                if ((this.ScanDateField.Equals(value) != true)) {
                    this.ScanDateField = value;
                    this.RaisePropertyChanged("ScanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherInfo2", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class VoucherInfo2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoucherIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsoId {
            get {
                return this.IsoIdField;
            }
            set {
                if ((this.IsoIdField.Equals(value) != true)) {
                    this.IsoIdField = value;
                    this.RaisePropertyChanged("IsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerId {
            get {
                return this.RetailerIdField;
            }
            set {
                if ((this.RetailerIdField.Equals(value) != true)) {
                    this.RetailerIdField = value;
                    this.RaisePropertyChanged("RetailerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoucherId {
            get {
                return this.VoucherIdField;
            }
            set {
                if ((this.VoucherIdField.Equals(value) != true)) {
                    this.VoucherIdField = value;
                    this.RaisePropertyChanged("VoucherId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScanServiceRef.IScanService")]
    public interface IScanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/Delete", ReplyAction="http://tempuri.org/IScanService/DeleteResponse")]
        void Delete(string fileName, int countryId, int retailerId, int voucherId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/Delete", ReplyAction="http://tempuri.org/IScanService/DeleteResponse")]
        System.IAsyncResult BeginDelete(string fileName, int countryId, int retailerId, int voucherId, System.AsyncCallback callback, object asyncState);
        
        void EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadData", ReplyAction="http://tempuri.org/IScanService/ReadDataResponse")]
        FintraxPTFImages.ScanServiceRef.VoucherInfo[] ReadData(int countryId, int retailerId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadData", ReplyAction="http://tempuri.org/IScanService/ReadDataResponse")]
        System.IAsyncResult BeginReadData(int countryId, int retailerId, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.VoucherInfo[] EndReadData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadVoucherInfo", ReplyAction="http://tempuri.org/IScanService/ReadVoucherInfoResponse")]
        FintraxPTFImages.ScanServiceRef.VoucherInfo2 ReadVoucherInfo(int Id, string copyToFolder);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadVoucherInfo", ReplyAction="http://tempuri.org/IScanService/ReadVoucherInfoResponse")]
        System.IAsyncResult BeginReadVoucherInfo(int Id, string copyToFolder, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.VoucherInfo2 EndReadVoucherInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SaveData", ReplyAction="http://tempuri.org/IScanService/SaveDataResponse")]
        void SaveData(string serverDirName, string fileName, byte[] data);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SaveData", ReplyAction="http://tempuri.org/IScanService/SaveDataResponse")]
        System.IAsyncResult BeginSaveData(string serverDirName, string fileName, byte[] data, System.AsyncCallback callback, object asyncState);
        
        void EndSaveData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IScanService/CommitChanges")]
        void CommitChanges(string fileName, int jobId, int countryId, int retailerId, int voucherId, string siteCode, string barCode, int locationId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IScanService/CommitChanges")]
        System.IAsyncResult BeginCommitChanges(string fileName, int jobId, int countryId, int retailerId, int voucherId, string siteCode, string barCode, int locationId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndCommitChanges(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScanServiceChannel : FintraxPTFImages.ScanServiceRef.IScanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.VoucherInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadVoucherInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadVoucherInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo2 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.VoucherInfo2)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScanServiceClient : System.ServiceModel.ClientBase<FintraxPTFImages.ScanServiceRef.IScanService>, FintraxPTFImages.ScanServiceRef.IScanService {
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadDataDelegate;
        
        private EndOperationDelegate onEndReadDataDelegate;
        
        private System.Threading.SendOrPostCallback onReadDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadVoucherInfoDelegate;
        
        private EndOperationDelegate onEndReadVoucherInfoDelegate;
        
        private System.Threading.SendOrPostCallback onReadVoucherInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDataDelegate;
        
        private EndOperationDelegate onEndSaveDataDelegate;
        
        private System.Threading.SendOrPostCallback onSaveDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginCommitChangesDelegate;
        
        private EndOperationDelegate onEndCommitChangesDelegate;
        
        private System.Threading.SendOrPostCallback onCommitChangesCompletedDelegate;
        
        public ScanServiceClient() {
        }
        
        public ScanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<ReadDataCompletedEventArgs> ReadDataCompleted;
        
        public event System.EventHandler<ReadVoucherInfoCompletedEventArgs> ReadVoucherInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CommitChangesCompleted;
        
        public void Delete(string fileName, int countryId, int retailerId, int voucherId) {
            base.Channel.Delete(fileName, countryId, retailerId, voucherId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDelete(string fileName, int countryId, int retailerId, int voucherId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(fileName, countryId, retailerId, voucherId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDelete(System.IAsyncResult result) {
            base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            int countryId = ((int)(inValues[1]));
            int retailerId = ((int)(inValues[2]));
            int voucherId = ((int)(inValues[3]));
            return this.BeginDelete(fileName, countryId, retailerId, voucherId, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            this.EndDelete(result);
            return null;
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(string fileName, int countryId, int retailerId, int voucherId) {
            this.DeleteAsync(fileName, countryId, retailerId, voucherId, null);
        }
        
        public void DeleteAsync(string fileName, int countryId, int retailerId, int voucherId, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        fileName,
                        countryId,
                        retailerId,
                        voucherId}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo[] ReadData(int countryId, int retailerId) {
            return base.Channel.ReadData(countryId, retailerId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadData(int countryId, int retailerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadData(countryId, retailerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.VoucherInfo[] EndReadData(System.IAsyncResult result) {
            return base.Channel.EndReadData(result);
        }
        
        private System.IAsyncResult OnBeginReadData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            int retailerId = ((int)(inValues[1]));
            return this.BeginReadData(countryId, retailerId, callback, asyncState);
        }
        
        private object[] OnEndReadData(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.VoucherInfo[] retVal = this.EndReadData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadDataCompleted(object state) {
            if ((this.ReadDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadDataCompleted(this, new ReadDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadDataAsync(int countryId, int retailerId) {
            this.ReadDataAsync(countryId, retailerId, null);
        }
        
        public void ReadDataAsync(int countryId, int retailerId, object userState) {
            if ((this.onBeginReadDataDelegate == null)) {
                this.onBeginReadDataDelegate = new BeginOperationDelegate(this.OnBeginReadData);
            }
            if ((this.onEndReadDataDelegate == null)) {
                this.onEndReadDataDelegate = new EndOperationDelegate(this.OnEndReadData);
            }
            if ((this.onReadDataCompletedDelegate == null)) {
                this.onReadDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadDataCompleted);
            }
            base.InvokeAsync(this.onBeginReadDataDelegate, new object[] {
                        countryId,
                        retailerId}, this.onEndReadDataDelegate, this.onReadDataCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo2 ReadVoucherInfo(int Id, string copyToFolder) {
            return base.Channel.ReadVoucherInfo(Id, copyToFolder);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadVoucherInfo(int Id, string copyToFolder, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadVoucherInfo(Id, copyToFolder, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.VoucherInfo2 EndReadVoucherInfo(System.IAsyncResult result) {
            return base.Channel.EndReadVoucherInfo(result);
        }
        
        private System.IAsyncResult OnBeginReadVoucherInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id = ((int)(inValues[0]));
            string copyToFolder = ((string)(inValues[1]));
            return this.BeginReadVoucherInfo(Id, copyToFolder, callback, asyncState);
        }
        
        private object[] OnEndReadVoucherInfo(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.VoucherInfo2 retVal = this.EndReadVoucherInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadVoucherInfoCompleted(object state) {
            if ((this.ReadVoucherInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadVoucherInfoCompleted(this, new ReadVoucherInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadVoucherInfoAsync(int Id, string copyToFolder) {
            this.ReadVoucherInfoAsync(Id, copyToFolder, null);
        }
        
        public void ReadVoucherInfoAsync(int Id, string copyToFolder, object userState) {
            if ((this.onBeginReadVoucherInfoDelegate == null)) {
                this.onBeginReadVoucherInfoDelegate = new BeginOperationDelegate(this.OnBeginReadVoucherInfo);
            }
            if ((this.onEndReadVoucherInfoDelegate == null)) {
                this.onEndReadVoucherInfoDelegate = new EndOperationDelegate(this.OnEndReadVoucherInfo);
            }
            if ((this.onReadVoucherInfoCompletedDelegate == null)) {
                this.onReadVoucherInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadVoucherInfoCompleted);
            }
            base.InvokeAsync(this.onBeginReadVoucherInfoDelegate, new object[] {
                        Id,
                        copyToFolder}, this.onEndReadVoucherInfoDelegate, this.onReadVoucherInfoCompletedDelegate, userState);
        }
        
        public void SaveData(string serverDirName, string fileName, byte[] data) {
            base.Channel.SaveData(serverDirName, fileName, data);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveData(string serverDirName, string fileName, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveData(serverDirName, fileName, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveData(System.IAsyncResult result) {
            base.Channel.EndSaveData(result);
        }
        
        private System.IAsyncResult OnBeginSaveData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string serverDirName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            byte[] data = ((byte[])(inValues[2]));
            return this.BeginSaveData(serverDirName, fileName, data, callback, asyncState);
        }
        
        private object[] OnEndSaveData(System.IAsyncResult result) {
            this.EndSaveData(result);
            return null;
        }
        
        private void OnSaveDataCompleted(object state) {
            if ((this.SaveDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveDataAsync(string serverDirName, string fileName, byte[] data) {
            this.SaveDataAsync(serverDirName, fileName, data, null);
        }
        
        public void SaveDataAsync(string serverDirName, string fileName, byte[] data, object userState) {
            if ((this.onBeginSaveDataDelegate == null)) {
                this.onBeginSaveDataDelegate = new BeginOperationDelegate(this.OnBeginSaveData);
            }
            if ((this.onEndSaveDataDelegate == null)) {
                this.onEndSaveDataDelegate = new EndOperationDelegate(this.OnEndSaveData);
            }
            if ((this.onSaveDataCompletedDelegate == null)) {
                this.onSaveDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDataCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDataDelegate, new object[] {
                        serverDirName,
                        fileName,
                        data}, this.onEndSaveDataDelegate, this.onSaveDataCompletedDelegate, userState);
        }
        
        public void CommitChanges(string fileName, int jobId, int countryId, int retailerId, int voucherId, string siteCode, string barCode, int locationId, int userId) {
            base.Channel.CommitChanges(fileName, jobId, countryId, retailerId, voucherId, siteCode, barCode, locationId, userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCommitChanges(string fileName, int jobId, int countryId, int retailerId, int voucherId, string siteCode, string barCode, int locationId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCommitChanges(fileName, jobId, countryId, retailerId, voucherId, siteCode, barCode, locationId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCommitChanges(System.IAsyncResult result) {
            base.Channel.EndCommitChanges(result);
        }
        
        private System.IAsyncResult OnBeginCommitChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            int jobId = ((int)(inValues[1]));
            int countryId = ((int)(inValues[2]));
            int retailerId = ((int)(inValues[3]));
            int voucherId = ((int)(inValues[4]));
            string siteCode = ((string)(inValues[5]));
            string barCode = ((string)(inValues[6]));
            int locationId = ((int)(inValues[7]));
            int userId = ((int)(inValues[8]));
            return this.BeginCommitChanges(fileName, jobId, countryId, retailerId, voucherId, siteCode, barCode, locationId, userId, callback, asyncState);
        }
        
        private object[] OnEndCommitChanges(System.IAsyncResult result) {
            this.EndCommitChanges(result);
            return null;
        }
        
        private void OnCommitChangesCompleted(object state) {
            if ((this.CommitChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommitChangesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CommitChangesAsync(string fileName, int jobId, int countryId, int retailerId, int voucherId, string siteCode, string barCode, int locationId, int userId) {
            this.CommitChangesAsync(fileName, jobId, countryId, retailerId, voucherId, siteCode, barCode, locationId, userId, null);
        }
        
        public void CommitChangesAsync(string fileName, int jobId, int countryId, int retailerId, int voucherId, string siteCode, string barCode, int locationId, int userId, object userState) {
            if ((this.onBeginCommitChangesDelegate == null)) {
                this.onBeginCommitChangesDelegate = new BeginOperationDelegate(this.OnBeginCommitChanges);
            }
            if ((this.onEndCommitChangesDelegate == null)) {
                this.onEndCommitChangesDelegate = new EndOperationDelegate(this.OnEndCommitChanges);
            }
            if ((this.onCommitChangesCompletedDelegate == null)) {
                this.onCommitChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommitChangesCompleted);
            }
            base.InvokeAsync(this.onBeginCommitChangesDelegate, new object[] {
                        fileName,
                        jobId,
                        countryId,
                        retailerId,
                        voucherId,
                        siteCode,
                        barCode,
                        locationId,
                        userId}, this.onEndCommitChangesDelegate, this.onCommitChangesCompletedDelegate, userState);
        }
    }
}
