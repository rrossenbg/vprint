//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FintraxPTFImages.ScanServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class MyApplicationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherInfo2", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class VoucherInfo2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoucherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsoId {
            get {
                return this.IsoIdField;
            }
            set {
                if ((this.IsoIdField.Equals(value) != true)) {
                    this.IsoIdField = value;
                    this.RaisePropertyChanged("IsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerId {
            get {
                return this.RetailerIdField;
            }
            set {
                if ((this.RetailerIdField.Equals(value) != true)) {
                    this.RetailerIdField = value;
                    this.RaisePropertyChanged("RetailerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoucherId {
            get {
                return this.VoucherIdField;
            }
            set {
                if ((this.VoucherIdField.Equals(value) != true)) {
                    this.VoucherIdField = value;
                    this.RaisePropertyChanged("VoucherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class VoucherInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ScanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string BarCode {
            get {
                return this.BarCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BarCodeField, value) != true)) {
                    this.BarCodeField = value;
                    this.RaisePropertyChanged("BarCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime ScanDate {
            get {
                return this.ScanDateField;
            }
            set {
                if ((this.ScanDateField.Equals(value) != true)) {
                    this.ScanDateField = value;
                    this.RaisePropertyChanged("ScanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int OperatorId {
            get {
                return this.OperatorIdField;
            }
            set {
                if ((this.OperatorIdField.Equals(value) != true)) {
                    this.OperatorIdField = value;
                    this.RaisePropertyChanged("OperatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeContentType", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    public enum ChangeContentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INIT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADD = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSERT = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPDATE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELETE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REMOVE = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MERGE = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REPLACE = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VERIFY = 8,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationHistory", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    public enum OperationHistory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NA = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Login = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Logout = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Print = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RePrint = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scan = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Coversheet = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispatchVoucher = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetupPrint = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetupScan = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowScannedImage = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintLayoutUpdate = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScanLayoutUpdate = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderAdded = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderRenamed = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderDeleted = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileDeleted = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllFilesDeleted = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileDownloaded = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CoverFileDownloaded = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 127,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryByCountryInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class HistoryByCountryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FintraxPTFImages.ScanServiceRef.OperationHistory OperTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrIsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int V2IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsoId {
            get {
                return this.IsoIdField;
            }
            set {
                if ((this.IsoIdField.Equals(value) != true)) {
                    this.IsoIdField = value;
                    this.RaisePropertyChanged("IsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public FintraxPTFImages.ScanServiceRef.OperationHistory OperType {
            get {
                return this.OperTypeField;
            }
            set {
                if ((this.OperTypeField.Equals(value) != true)) {
                    this.OperTypeField = value;
                    this.RaisePropertyChanged("OperType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int BrIsoId {
            get {
                return this.BrIsoIdField;
            }
            set {
                if ((this.BrIsoIdField.Equals(value) != true)) {
                    this.BrIsoIdField = value;
                    this.RaisePropertyChanged("BrIsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int BrId {
            get {
                return this.BrIdField;
            }
            set {
                if ((this.BrIdField.Equals(value) != true)) {
                    this.BrIdField = value;
                    this.RaisePropertyChanged("BrId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int VID {
            get {
                return this.VIDField;
            }
            set {
                if ((this.VIDField.Equals(value) != true)) {
                    this.VIDField = value;
                    this.RaisePropertyChanged("VID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int V2ID {
            get {
                return this.V2IDField;
            }
            set {
                if ((this.V2IDField.Equals(value) != true)) {
                    this.V2IDField = value;
                    this.RaisePropertyChanged("V2ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Guid SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetailerPrinterInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class RetailerPrinterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadOfficeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrinterPathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadOfficeId {
            get {
                return this.HeadOfficeIdField;
            }
            set {
                if ((this.HeadOfficeIdField.Equals(value) != true)) {
                    this.HeadOfficeIdField = value;
                    this.RaisePropertyChanged("HeadOfficeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerId {
            get {
                return this.RetailerIdField;
            }
            set {
                if ((this.RetailerIdField.Equals(value) != true)) {
                    this.RetailerIdField = value;
                    this.RaisePropertyChanged("RetailerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int FormatId {
            get {
                return this.FormatIdField;
            }
            set {
                if ((this.FormatIdField.Equals(value) != true)) {
                    this.FormatIdField = value;
                    this.RaisePropertyChanged("FormatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string FormatName {
            get {
                return this.FormatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatNameField, value) != true)) {
                    this.FormatNameField = value;
                    this.RaisePropertyChanged("FormatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string FormatType {
            get {
                return this.FormatTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatTypeField, value) != true)) {
                    this.FormatTypeField = value;
                    this.RaisePropertyChanged("FormatType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PrinterPath {
            get {
                return this.PrinterPathField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterPathField, value) != true)) {
                    this.PrinterPathField = value;
                    this.RaisePropertyChanged("PrinterPath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fileInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class fileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoucherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((this.FolderIdField.Equals(value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int RetailerId {
            get {
                return this.RetailerIdField;
            }
            set {
                if ((this.RetailerIdField.Equals(value) != true)) {
                    this.RetailerIdField = value;
                    this.RaisePropertyChanged("RetailerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int VoucherId {
            get {
                return this.VoucherIdField;
            }
            set {
                if ((this.VoucherIdField.Equals(value) != true)) {
                    this.VoucherIdField = value;
                    this.RaisePropertyChanged("VoucherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class FolderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="file2Info", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class file2Info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((this.FolderIdField.Equals(value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((this.OperatorField.Equals(value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateFileInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class UpdateFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferFileInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class TransferFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BranchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteLocationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoucherNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvNo {
            get {
                return this.InvNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvNoField, value) != true)) {
                    this.InvNoField = value;
                    this.RaisePropertyChanged("InvNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int BranchId {
            get {
                return this.BranchIdField;
            }
            set {
                if ((this.BranchIdField.Equals(value) != true)) {
                    this.BranchIdField = value;
                    this.RaisePropertyChanged("BranchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string SiteLocationNo {
            get {
                return this.SiteLocationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteLocationNoField, value) != true)) {
                    this.SiteLocationNoField = value;
                    this.RaisePropertyChanged("SiteLocationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int VoucherNumber {
            get {
                return this.VoucherNumberField;
            }
            set {
                if ((this.VoucherNumberField.Equals(value) != true)) {
                    this.VoucherNumberField = value;
                    this.RaisePropertyChanged("VoucherNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherInfo3", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class VoucherInfo3 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoucherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime VoucherDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FinalCountryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsoId {
            get {
                return this.IsoIdField;
            }
            set {
                if ((this.IsoIdField.Equals(value) != true)) {
                    this.IsoIdField = value;
                    this.RaisePropertyChanged("IsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerId {
            get {
                return this.RetailerIdField;
            }
            set {
                if ((this.RetailerIdField.Equals(value) != true)) {
                    this.RetailerIdField = value;
                    this.RaisePropertyChanged("RetailerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoucherId {
            get {
                return this.VoucherIdField;
            }
            set {
                if ((this.VoucherIdField.Equals(value) != true)) {
                    this.VoucherIdField = value;
                    this.RaisePropertyChanged("VoucherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime VoucherDate {
            get {
                return this.VoucherDateField;
            }
            set {
                if ((this.VoucherDateField.Equals(value) != true)) {
                    this.VoucherDateField = value;
                    this.RaisePropertyChanged("VoucherDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string FinalCountry {
            get {
                return this.FinalCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.FinalCountryField, value) != true)) {
                    this.FinalCountryField = value;
                    this.RaisePropertyChanged("FinalCountry");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class EmailInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CCField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsoId {
            get {
                return this.IsoIdField;
            }
            set {
                if ((this.IsoIdField.Equals(value) != true)) {
                    this.IsoIdField = value;
                    this.RaisePropertyChanged("IsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int HoId {
            get {
                return this.HoIdField;
            }
            set {
                if ((this.HoIdField.Equals(value) != true)) {
                    this.HoIdField = value;
                    this.RaisePropertyChanged("HoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int InNumber {
            get {
                return this.InNumberField;
            }
            set {
                if ((this.InNumberField.Equals(value) != true)) {
                    this.InNumberField = value;
                    this.RaisePropertyChanged("InNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime InDate {
            get {
                return this.InDateField;
            }
            set {
                if ((this.InDateField.Equals(value) != true)) {
                    this.InDateField = value;
                    this.RaisePropertyChanged("InDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string CC {
            get {
                return this.CCField;
            }
            set {
                if ((object.ReferenceEquals(this.CCField, value) != true)) {
                    this.CCField = value;
                    this.RaisePropertyChanged("CC");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScanServiceRef.IScanService")]
    public interface IScanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/Delete", ReplyAction="http://tempuri.org/IScanService/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DeleteMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void Delete(string fileName, int countryId, int retailerId, int voucherId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/Delete", ReplyAction="http://tempuri.org/IScanService/DeleteResponse")]
        System.IAsyncResult BeginDelete(string fileName, int countryId, int retailerId, int voucherId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadVoucherInfo", ReplyAction="http://tempuri.org/IScanService/ReadVoucherInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadVoucherInfoMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.VoucherInfo2 ReadVoucherInfo(int Id, string copyToFolder, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadVoucherInfo", ReplyAction="http://tempuri.org/IScanService/ReadVoucherInfoResponse")]
        System.IAsyncResult BeginReadVoucherInfo(int Id, string copyToFolder, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.VoucherInfo2 EndReadVoucherInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadData", ReplyAction="http://tempuri.org/IScanService/ReadDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadDataMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.VoucherInfo[] ReadData(int countryId, int retailerId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadData", ReplyAction="http://tempuri.org/IScanService/ReadDataResponse")]
        System.IAsyncResult BeginReadData(int countryId, int retailerId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.VoucherInfo[] EndReadData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadData2", ReplyAction="http://tempuri.org/IScanService/ReadData2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadData2MyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        byte[] ReadData2(int id, bool isVoucher, int start, int length, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadData2", ReplyAction="http://tempuri.org/IScanService/ReadData2Response")]
        System.IAsyncResult BeginReadData2(int id, bool isVoucher, int start, int length, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        byte[] EndReadData2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SaveData", ReplyAction="http://tempuri.org/IScanService/SaveDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SaveDataMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void SaveData(string serverDirName, string fileName, byte[] data, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SaveData", ReplyAction="http://tempuri.org/IScanService/SaveDataResponse")]
        System.IAsyncResult BeginSaveData(string serverDirName, string fileName, byte[] data, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndSaveData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SaveDataAsync", ReplyAction="http://tempuri.org/IScanService/SaveDataAsyncResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SaveDataAsyncMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void SaveDataAsync(string serverDirName, string fileName, byte[] data, long position, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SaveDataAsync", ReplyAction="http://tempuri.org/IScanService/SaveDataAsyncResponse")]
        System.IAsyncResult BeginSaveDataAsync(string serverDirName, string fileName, byte[] data, long position, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndSaveDataAsync(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/CommitVoucherChanges", ReplyAction="http://tempuri.org/IScanService/CommitVoucherChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/CommitVoucherChangesMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void CommitVoucherChanges(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/CommitVoucherChanges", ReplyAction="http://tempuri.org/IScanService/CommitVoucherChangesResponse")]
        System.IAsyncResult BeginCommitVoucherChanges(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndCommitVoucherChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/CommitVoucherChangesModify_V2", ReplyAction="http://tempuri.org/IScanService/CommitVoucherChangesModify_V2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/CommitVoucherChangesModify_V2MyApplicationFaultFa" +
            "ult", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void CommitVoucherChangesModify_V2(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, int typeId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/CommitVoucherChangesModify_V2", ReplyAction="http://tempuri.org/IScanService/CommitVoucherChangesModify_V2Response")]
        System.IAsyncResult BeginCommitVoucherChangesModify_V2(
                    string serverDirName, 
                    int jobId, 
                    int countryId, 
                    int retailerId, 
                    int voucherId, 
                    System.Nullable<int> folderId, 
                    string siteCode, 
                    string barCode, 
                    int locationId, 
                    int userId, 
                    int typeId, 
                    FintraxPTFImages.ScanServiceRef.ChangeContentType action, 
                    string s1, 
                    string s2, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndCommitVoucherChangesModify_V2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/CommitVoucherChangesModify", ReplyAction="http://tempuri.org/IScanService/CommitVoucherChangesModifyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/CommitVoucherChangesModifyMyApplicationFaultFault" +
            "", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void CommitVoucherChangesModify(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/CommitVoucherChangesModify", ReplyAction="http://tempuri.org/IScanService/CommitVoucherChangesModifyResponse")]
        System.IAsyncResult BeginCommitVoucherChangesModify(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndCommitVoucherChangesModify(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/CommitFileChanges", ReplyAction="http://tempuri.org/IScanService/CommitFileChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/CommitFileChangesMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void CommitFileChanges(string serverDirName, int countryId, System.Nullable<int> folderId, int locationId, int userId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/CommitFileChanges", ReplyAction="http://tempuri.org/IScanService/CommitFileChangesResponse")]
        System.IAsyncResult BeginCommitFileChanges(string serverDirName, int countryId, System.Nullable<int> folderId, int locationId, int userId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndCommitFileChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ValidateVoucher", ReplyAction="http://tempuri.org/IScanService/ValidateVoucherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ValidateVoucherMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void ValidateVoucher(int countryId, bool ss, int retailerId, int voucherId, bool voucherMustExist, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ValidateVoucher", ReplyAction="http://tempuri.org/IScanService/ValidateVoucherResponse")]
        System.IAsyncResult BeginValidateVoucher(int countryId, bool ss, int retailerId, int voucherId, bool voucherMustExist, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndValidateVoucher(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/FindVoucher", ReplyAction="http://tempuri.org/IScanService/FindVoucherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/FindVoucherMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        string FindVoucher(int countryId, int voucherId, int voucherIdCD, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/FindVoucher", ReplyAction="http://tempuri.org/IScanService/FindVoucherResponse")]
        System.IAsyncResult BeginFindVoucher(int countryId, int voucherId, int voucherIdCD, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        string EndFindVoucher(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/FindVoucherImage", ReplyAction="http://tempuri.org/IScanService/FindVoucherImageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/FindVoucherImageMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        int[] FindVoucherImage(int countryId, int voucherId, int voucherIdCD, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/FindVoucherImage", ReplyAction="http://tempuri.org/IScanService/FindVoucherImageResponse")]
        System.IAsyncResult BeginFindVoucherImage(int countryId, int voucherId, int voucherIdCD, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        int[] EndFindVoucherImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadCoverInfo", ReplyAction="http://tempuri.org/IScanService/ReadCoverInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadCoverInfoMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        string ReadCoverInfo(int id, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadCoverInfo", ReplyAction="http://tempuri.org/IScanService/ReadCoverInfoResponse")]
        System.IAsyncResult BeginReadCoverInfo(int id, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        string EndReadCoverInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SaveHistory", ReplyAction="http://tempuri.org/IScanService/SaveHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SaveHistoryMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void SaveHistory(int operatorCountryId, int operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.Guid operationId, int brIsoId, int brId, int vId, int v2Id, int count, string details, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SaveHistory", ReplyAction="http://tempuri.org/IScanService/SaveHistoryResponse")]
        System.IAsyncResult BeginSaveHistory(int operatorCountryId, int operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.Guid operationId, int brIsoId, int brId, int vId, int v2Id, int count, string details, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndSaveHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadHistory", ReplyAction="http://tempuri.org/IScanService/ReadHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadHistoryMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.HistoryByCountryInfo[] ReadHistory(int operatorCountryId, System.Nullable<int> operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.DateTime from, System.DateTime to, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadHistory", ReplyAction="http://tempuri.org/IScanService/ReadHistoryResponse")]
        System.IAsyncResult BeginReadHistory(int operatorCountryId, System.Nullable<int> operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.DateTime from, System.DateTime to, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.HistoryByCountryInfo[] EndReadHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadRetailerPrinterInfo", ReplyAction="http://tempuri.org/IScanService/ReadRetailerPrinterInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadRetailerPrinterInfoMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.RetailerPrinterInfo[] ReadRetailerPrinterInfo(int countryId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadRetailerPrinterInfo", ReplyAction="http://tempuri.org/IScanService/ReadRetailerPrinterInfoResponse")]
        System.IAsyncResult BeginReadRetailerPrinterInfo(int countryId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.RetailerPrinterInfo[] EndReadRetailerPrinterInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFilesBySql", ReplyAction="http://tempuri.org/IScanService/SelectFilesBySqlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFilesBySqlMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.fileInfo[] SelectFilesBySql(string whereClause, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SelectFilesBySql", ReplyAction="http://tempuri.org/IScanService/SelectFilesBySqlResponse")]
        System.IAsyncResult BeginSelectFilesBySql(string whereClause, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.fileInfo[] EndSelectFilesBySql(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/UpdateVouchersOrFilesBySql", ReplyAction="http://tempuri.org/IScanService/UpdateVouchersOrFilesBySqlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/UpdateVouchersOrFilesBySqlMyApplicationFaultFault" +
            "", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void UpdateVouchersOrFilesBySql(string setSql, string whereClause, bool isVoucher, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/UpdateVouchersOrFilesBySql", ReplyAction="http://tempuri.org/IScanService/UpdateVouchersOrFilesBySqlResponse")]
        System.IAsyncResult BeginUpdateVouchersOrFilesBySql(string setSql, string whereClause, bool isVoucher, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateVouchersOrFilesBySql(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/AddFolder", ReplyAction="http://tempuri.org/IScanService/AddFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/AddFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void AddFolder(System.Nullable<int> toParentId, string name, int countryId, int userId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/AddFolder", ReplyAction="http://tempuri.org/IScanService/AddFolderResponse")]
        System.IAsyncResult BeginAddFolder(System.Nullable<int> toParentId, string name, int countryId, int userId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndAddFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/UpdateFolder", ReplyAction="http://tempuri.org/IScanService/UpdateFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/UpdateFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void UpdateFolder(int folderId, string name, System.Nullable<int> parentId, int countryId, int userId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/UpdateFolder", ReplyAction="http://tempuri.org/IScanService/UpdateFolderResponse")]
        System.IAsyncResult BeginUpdateFolder(int folderId, string name, System.Nullable<int> parentId, int countryId, int userId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/DeleteFolder", ReplyAction="http://tempuri.org/IScanService/DeleteFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DeleteFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void DeleteFolder(int folderId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/DeleteFolder", ReplyAction="http://tempuri.org/IScanService/DeleteFolderResponse")]
        System.IAsyncResult BeginDeleteFolder(int folderId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/DeleteFile", ReplyAction="http://tempuri.org/IScanService/DeleteFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DeleteFileMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void DeleteFile(int id, bool isVoucher, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/DeleteFile", ReplyAction="http://tempuri.org/IScanService/DeleteFileResponse")]
        System.IAsyncResult BeginDeleteFile(int id, bool isVoucher, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/DeleteAllFilesInFolder", ReplyAction="http://tempuri.org/IScanService/DeleteAllFilesInFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DeleteAllFilesInFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void DeleteAllFilesInFolder(int folderId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/DeleteAllFilesInFolder", ReplyAction="http://tempuri.org/IScanService/DeleteAllFilesInFolderResponse")]
        System.IAsyncResult BeginDeleteAllFilesInFolder(int folderId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAllFilesInFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/RenameFolder", ReplyAction="http://tempuri.org/IScanService/RenameFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/RenameFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void RenameFolder(int folderId, string name, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/RenameFolder", ReplyAction="http://tempuri.org/IScanService/RenameFolderResponse")]
        System.IAsyncResult BeginRenameFolder(int folderId, string name, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndRenameFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFoldersByParent", ReplyAction="http://tempuri.org/IScanService/SelectFoldersByParentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFoldersByParentMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.FolderInfo[] SelectFoldersByParent(System.Nullable<int> parentId, int createdByIsoId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SelectFoldersByParent", ReplyAction="http://tempuri.org/IScanService/SelectFoldersByParentResponse")]
        System.IAsyncResult BeginSelectFoldersByParent(System.Nullable<int> parentId, int createdByIsoId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.FolderInfo[] EndSelectFoldersByParent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFilesByFolder", ReplyAction="http://tempuri.org/IScanService/SelectFilesByFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFilesByFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.fileInfo[] SelectFilesByFolder(int folderId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SelectFilesByFolder", ReplyAction="http://tempuri.org/IScanService/SelectFilesByFolderResponse")]
        System.IAsyncResult BeginSelectFilesByFolder(int folderId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.fileInfo[] EndSelectFilesByFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFilesByFolder2", ReplyAction="http://tempuri.org/IScanService/SelectFilesByFolder2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFilesByFolder2MyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.fileInfo[] SelectFilesByFolder2(int folderId, int skip, int take, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SelectFilesByFolder2", ReplyAction="http://tempuri.org/IScanService/SelectFilesByFolder2Response")]
        System.IAsyncResult BeginSelectFilesByFolder2(int folderId, int skip, int take, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.fileInfo[] EndSelectFilesByFolder2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectCoversByFolder", ReplyAction="http://tempuri.org/IScanService/SelectCoversByFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectCoversByFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.file2Info[] SelectCoversByFolder(int folderId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SelectCoversByFolder", ReplyAction="http://tempuri.org/IScanService/SelectCoversByFolderResponse")]
        System.IAsyncResult BeginSelectCoversByFolder(int folderId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.file2Info[] EndSelectCoversByFolder(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFileById", ReplyAction="http://tempuri.org/IScanService/SelectFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFileByIdMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        byte[] SelectFileById(int fileId, bool isVoucher, bool signed, int startFrom, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/SelectFileById", ReplyAction="http://tempuri.org/IScanService/SelectFileByIdResponse")]
        System.IAsyncResult BeginSelectFileById(int fileId, bool isVoucher, bool signed, int startFrom, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        byte[] EndSelectFileById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/GetVersionInfo", ReplyAction="http://tempuri.org/IScanService/GetVersionInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/GetVersionInfoMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.UpdateFileInfo[] GetVersionInfo(string currentVersion, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/GetVersionInfo", ReplyAction="http://tempuri.org/IScanService/GetVersionInfoResponse")]
        System.IAsyncResult BeginGetVersionInfo(string currentVersion, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.UpdateFileInfo[] EndGetVersionInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadVersionFile", ReplyAction="http://tempuri.org/IScanService/ReadVersionFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadVersionFileMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        byte[] ReadVersionFile(string fileName, long from, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/ReadVersionFile", ReplyAction="http://tempuri.org/IScanService/ReadVersionFileResponse")]
        System.IAsyncResult BeginReadVersionFile(string fileName, long from, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        byte[] EndReadVersionFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/GetTransferFile", ReplyAction="http://tempuri.org/IScanService/GetTransferFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/GetTransferFileMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.TransferFileInfo[] GetTransferFile(int countryId, int beginNumber, int endNumber, string siteCode, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/GetTransferFile", ReplyAction="http://tempuri.org/IScanService/GetTransferFileResponse")]
        System.IAsyncResult BeginGetTransferFile(int countryId, int beginNumber, int endNumber, string siteCode, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.TransferFileInfo[] EndGetTransferFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/FindVoucherTRSByVoucherNumber", ReplyAction="http://tempuri.org/IScanService/FindVoucherTRSByVoucherNumberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/FindVoucherTRSByVoucherNumberMyApplicationFaultFa" +
            "ult", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.VoucherInfo3 FindVoucherTRSByVoucherNumber(int countryId, int voucherId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/FindVoucherTRSByVoucherNumber", ReplyAction="http://tempuri.org/IScanService/FindVoucherTRSByVoucherNumberResponse")]
        System.IAsyncResult BeginFindVoucherTRSByVoucherNumber(int countryId, int voucherId, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.VoucherInfo3 EndFindVoucherTRSByVoucherNumber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/FindVoucherTRSBySiteCode", ReplyAction="http://tempuri.org/IScanService/FindVoucherTRSBySiteCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/FindVoucherTRSBySiteCodeMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.VoucherInfo3 FindVoucherTRSBySiteCode(string siteCode, int location, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/FindVoucherTRSBySiteCode", ReplyAction="http://tempuri.org/IScanService/FindVoucherTRSBySiteCodeResponse")]
        System.IAsyncResult BeginFindVoucherTRSBySiteCode(string siteCode, int location, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.VoucherInfo3 EndFindVoucherTRSBySiteCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/FindVoucherPRBySiteCode", ReplyAction="http://tempuri.org/IScanService/FindVoucherPRBySiteCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/FindVoucherPRBySiteCodeMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        FintraxPTFImages.ScanServiceRef.VoucherInfo3 FindVoucherPRBySiteCode(string siteCode, int location, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/FindVoucherPRBySiteCode", ReplyAction="http://tempuri.org/IScanService/FindVoucherPRBySiteCodeResponse")]
        System.IAsyncResult BeginFindVoucherPRBySiteCode(string siteCode, int location, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        FintraxPTFImages.ScanServiceRef.VoucherInfo3 EndFindVoucherPRBySiteCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/DownloadReport", ReplyAction="http://tempuri.org/IScanService/DownloadReportResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DownloadReportMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        byte[] DownloadReport(string rServerUrl, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/DownloadReport", ReplyAction="http://tempuri.org/IScanService/DownloadReportResponse")]
        System.IAsyncResult BeginDownloadReport(string rServerUrl, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        byte[] EndDownloadReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/DownloadVouchers", ReplyAction="http://tempuri.org/IScanService/DownloadVouchersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DownloadVouchersMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        byte[] DownloadVouchers(int countryId, int[] voucherIds, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/DownloadVouchers", ReplyAction="http://tempuri.org/IScanService/DownloadVouchersResponse")]
        System.IAsyncResult BeginDownloadVouchers(int countryId, int[] voucherIds, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        byte[] EndDownloadVouchers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/EmailNotaDebito", ReplyAction="http://tempuri.org/IScanService/EmailNotaDebitoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(FintraxPTFImages.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/EmailNotaDebitoMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void EmailNotaDebito(FintraxPTFImages.ScanServiceRef.EmailInfo[] emails, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IScanService/EmailNotaDebito", ReplyAction="http://tempuri.org/IScanService/EmailNotaDebitoResponse")]
        System.IAsyncResult BeginEmailNotaDebito(FintraxPTFImages.ScanServiceRef.EmailInfo[] emails, string s1, string s2, System.AsyncCallback callback, object asyncState);
        
        void EndEmailNotaDebito(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScanServiceChannel : FintraxPTFImages.ScanServiceRef.IScanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadVoucherInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadVoucherInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo2 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.VoucherInfo2)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.VoucherInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadData2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadData2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindVoucherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindVoucherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindVoucherImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindVoucherImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadCoverInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadCoverInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.HistoryByCountryInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.HistoryByCountryInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadRetailerPrinterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadRetailerPrinterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.RetailerPrinterInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.RetailerPrinterInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectFilesBySqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectFilesBySqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.fileInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.fileInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectFoldersByParentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectFoldersByParentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.FolderInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.FolderInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectFilesByFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectFilesByFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.fileInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.fileInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectFilesByFolder2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectFilesByFolder2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.fileInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.fileInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectCoversByFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectCoversByFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.file2Info[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.file2Info[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectFileByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectFileByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVersionInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVersionInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.UpdateFileInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.UpdateFileInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReadVersionFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReadVersionFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTransferFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTransferFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.TransferFileInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.TransferFileInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindVoucherTRSByVoucherNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindVoucherTRSByVoucherNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.VoucherInfo3)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindVoucherTRSBySiteCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindVoucherTRSBySiteCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.VoucherInfo3)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindVoucherPRBySiteCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindVoucherPRBySiteCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((FintraxPTFImages.ScanServiceRef.VoucherInfo3)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadVouchersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadVouchersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScanServiceClient : System.ServiceModel.ClientBase<FintraxPTFImages.ScanServiceRef.IScanService>, FintraxPTFImages.ScanServiceRef.IScanService {
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadVoucherInfoDelegate;
        
        private EndOperationDelegate onEndReadVoucherInfoDelegate;
        
        private System.Threading.SendOrPostCallback onReadVoucherInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadDataDelegate;
        
        private EndOperationDelegate onEndReadDataDelegate;
        
        private System.Threading.SendOrPostCallback onReadDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadData2Delegate;
        
        private EndOperationDelegate onEndReadData2Delegate;
        
        private System.Threading.SendOrPostCallback onReadData2CompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDataDelegate;
        
        private EndOperationDelegate onEndSaveDataDelegate;
        
        private System.Threading.SendOrPostCallback onSaveDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDataAsyncDelegate;
        
        private EndOperationDelegate onEndSaveDataAsyncDelegate;
        
        private System.Threading.SendOrPostCallback onSaveDataAsyncCompletedDelegate;
        
        private BeginOperationDelegate onBeginCommitVoucherChangesDelegate;
        
        private EndOperationDelegate onEndCommitVoucherChangesDelegate;
        
        private System.Threading.SendOrPostCallback onCommitVoucherChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCommitVoucherChangesModify_V2Delegate;
        
        private EndOperationDelegate onEndCommitVoucherChangesModify_V2Delegate;
        
        private System.Threading.SendOrPostCallback onCommitVoucherChangesModify_V2CompletedDelegate;
        
        private BeginOperationDelegate onBeginCommitVoucherChangesModifyDelegate;
        
        private EndOperationDelegate onEndCommitVoucherChangesModifyDelegate;
        
        private System.Threading.SendOrPostCallback onCommitVoucherChangesModifyCompletedDelegate;
        
        private BeginOperationDelegate onBeginCommitFileChangesDelegate;
        
        private EndOperationDelegate onEndCommitFileChangesDelegate;
        
        private System.Threading.SendOrPostCallback onCommitFileChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateVoucherDelegate;
        
        private EndOperationDelegate onEndValidateVoucherDelegate;
        
        private System.Threading.SendOrPostCallback onValidateVoucherCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindVoucherDelegate;
        
        private EndOperationDelegate onEndFindVoucherDelegate;
        
        private System.Threading.SendOrPostCallback onFindVoucherCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindVoucherImageDelegate;
        
        private EndOperationDelegate onEndFindVoucherImageDelegate;
        
        private System.Threading.SendOrPostCallback onFindVoucherImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadCoverInfoDelegate;
        
        private EndOperationDelegate onEndReadCoverInfoDelegate;
        
        private System.Threading.SendOrPostCallback onReadCoverInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveHistoryDelegate;
        
        private EndOperationDelegate onEndSaveHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onSaveHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadHistoryDelegate;
        
        private EndOperationDelegate onEndReadHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onReadHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadRetailerPrinterInfoDelegate;
        
        private EndOperationDelegate onEndReadRetailerPrinterInfoDelegate;
        
        private System.Threading.SendOrPostCallback onReadRetailerPrinterInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectFilesBySqlDelegate;
        
        private EndOperationDelegate onEndSelectFilesBySqlDelegate;
        
        private System.Threading.SendOrPostCallback onSelectFilesBySqlCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVouchersOrFilesBySqlDelegate;
        
        private EndOperationDelegate onEndUpdateVouchersOrFilesBySqlDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVouchersOrFilesBySqlCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddFolderDelegate;
        
        private EndOperationDelegate onEndAddFolderDelegate;
        
        private System.Threading.SendOrPostCallback onAddFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFolderDelegate;
        
        private EndOperationDelegate onEndUpdateFolderDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFolderDelegate;
        
        private EndOperationDelegate onEndDeleteFolderDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFileDelegate;
        
        private EndOperationDelegate onEndDeleteFileDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAllFilesInFolderDelegate;
        
        private EndOperationDelegate onEndDeleteAllFilesInFolderDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAllFilesInFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginRenameFolderDelegate;
        
        private EndOperationDelegate onEndRenameFolderDelegate;
        
        private System.Threading.SendOrPostCallback onRenameFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectFoldersByParentDelegate;
        
        private EndOperationDelegate onEndSelectFoldersByParentDelegate;
        
        private System.Threading.SendOrPostCallback onSelectFoldersByParentCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectFilesByFolderDelegate;
        
        private EndOperationDelegate onEndSelectFilesByFolderDelegate;
        
        private System.Threading.SendOrPostCallback onSelectFilesByFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectFilesByFolder2Delegate;
        
        private EndOperationDelegate onEndSelectFilesByFolder2Delegate;
        
        private System.Threading.SendOrPostCallback onSelectFilesByFolder2CompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectCoversByFolderDelegate;
        
        private EndOperationDelegate onEndSelectCoversByFolderDelegate;
        
        private System.Threading.SendOrPostCallback onSelectCoversByFolderCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectFileByIdDelegate;
        
        private EndOperationDelegate onEndSelectFileByIdDelegate;
        
        private System.Threading.SendOrPostCallback onSelectFileByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVersionInfoDelegate;
        
        private EndOperationDelegate onEndGetVersionInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetVersionInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginReadVersionFileDelegate;
        
        private EndOperationDelegate onEndReadVersionFileDelegate;
        
        private System.Threading.SendOrPostCallback onReadVersionFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTransferFileDelegate;
        
        private EndOperationDelegate onEndGetTransferFileDelegate;
        
        private System.Threading.SendOrPostCallback onGetTransferFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindVoucherTRSByVoucherNumberDelegate;
        
        private EndOperationDelegate onEndFindVoucherTRSByVoucherNumberDelegate;
        
        private System.Threading.SendOrPostCallback onFindVoucherTRSByVoucherNumberCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindVoucherTRSBySiteCodeDelegate;
        
        private EndOperationDelegate onEndFindVoucherTRSBySiteCodeDelegate;
        
        private System.Threading.SendOrPostCallback onFindVoucherTRSBySiteCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindVoucherPRBySiteCodeDelegate;
        
        private EndOperationDelegate onEndFindVoucherPRBySiteCodeDelegate;
        
        private System.Threading.SendOrPostCallback onFindVoucherPRBySiteCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadReportDelegate;
        
        private EndOperationDelegate onEndDownloadReportDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadVouchersDelegate;
        
        private EndOperationDelegate onEndDownloadVouchersDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadVouchersCompletedDelegate;
        
        private BeginOperationDelegate onBeginEmailNotaDebitoDelegate;
        
        private EndOperationDelegate onEndEmailNotaDebitoDelegate;
        
        private System.Threading.SendOrPostCallback onEmailNotaDebitoCompletedDelegate;
        
        public ScanServiceClient() {
        }
        
        public ScanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<ReadVoucherInfoCompletedEventArgs> ReadVoucherInfoCompleted;
        
        public event System.EventHandler<ReadDataCompletedEventArgs> ReadDataCompleted;
        
        public event System.EventHandler<ReadData2CompletedEventArgs> ReadData2Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveDataAsyncCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CommitVoucherChangesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CommitVoucherChangesModify_V2Completed;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CommitVoucherChangesModifyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CommitFileChangesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ValidateVoucherCompleted;
        
        public event System.EventHandler<FindVoucherCompletedEventArgs> FindVoucherCompleted;
        
        public event System.EventHandler<FindVoucherImageCompletedEventArgs> FindVoucherImageCompleted;
        
        public event System.EventHandler<ReadCoverInfoCompletedEventArgs> ReadCoverInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveHistoryCompleted;
        
        public event System.EventHandler<ReadHistoryCompletedEventArgs> ReadHistoryCompleted;
        
        public event System.EventHandler<ReadRetailerPrinterInfoCompletedEventArgs> ReadRetailerPrinterInfoCompleted;
        
        public event System.EventHandler<SelectFilesBySqlCompletedEventArgs> SelectFilesBySqlCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateVouchersOrFilesBySqlCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddFolderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateFolderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteFolderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAllFilesInFolderCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RenameFolderCompleted;
        
        public event System.EventHandler<SelectFoldersByParentCompletedEventArgs> SelectFoldersByParentCompleted;
        
        public event System.EventHandler<SelectFilesByFolderCompletedEventArgs> SelectFilesByFolderCompleted;
        
        public event System.EventHandler<SelectFilesByFolder2CompletedEventArgs> SelectFilesByFolder2Completed;
        
        public event System.EventHandler<SelectCoversByFolderCompletedEventArgs> SelectCoversByFolderCompleted;
        
        public event System.EventHandler<SelectFileByIdCompletedEventArgs> SelectFileByIdCompleted;
        
        public event System.EventHandler<GetVersionInfoCompletedEventArgs> GetVersionInfoCompleted;
        
        public event System.EventHandler<ReadVersionFileCompletedEventArgs> ReadVersionFileCompleted;
        
        public event System.EventHandler<GetTransferFileCompletedEventArgs> GetTransferFileCompleted;
        
        public event System.EventHandler<FindVoucherTRSByVoucherNumberCompletedEventArgs> FindVoucherTRSByVoucherNumberCompleted;
        
        public event System.EventHandler<FindVoucherTRSBySiteCodeCompletedEventArgs> FindVoucherTRSBySiteCodeCompleted;
        
        public event System.EventHandler<FindVoucherPRBySiteCodeCompletedEventArgs> FindVoucherPRBySiteCodeCompleted;
        
        public event System.EventHandler<DownloadReportCompletedEventArgs> DownloadReportCompleted;
        
        public event System.EventHandler<DownloadVouchersCompletedEventArgs> DownloadVouchersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> EmailNotaDebitoCompleted;
        
        public void Delete(string fileName, int countryId, int retailerId, int voucherId, string s1, string s2) {
            base.Channel.Delete(fileName, countryId, retailerId, voucherId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDelete(string fileName, int countryId, int retailerId, int voucherId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(fileName, countryId, retailerId, voucherId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDelete(System.IAsyncResult result) {
            base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            int countryId = ((int)(inValues[1]));
            int retailerId = ((int)(inValues[2]));
            int voucherId = ((int)(inValues[3]));
            string s1 = ((string)(inValues[4]));
            string s2 = ((string)(inValues[5]));
            return this.BeginDelete(fileName, countryId, retailerId, voucherId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            this.EndDelete(result);
            return null;
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(string fileName, int countryId, int retailerId, int voucherId, string s1, string s2) {
            this.DeleteAsync(fileName, countryId, retailerId, voucherId, s1, s2, null);
        }
        
        public void DeleteAsync(string fileName, int countryId, int retailerId, int voucherId, string s1, string s2, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        fileName,
                        countryId,
                        retailerId,
                        voucherId,
                        s1,
                        s2}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo2 ReadVoucherInfo(int Id, string copyToFolder, string s1, string s2) {
            return base.Channel.ReadVoucherInfo(Id, copyToFolder, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadVoucherInfo(int Id, string copyToFolder, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadVoucherInfo(Id, copyToFolder, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.VoucherInfo2 EndReadVoucherInfo(System.IAsyncResult result) {
            return base.Channel.EndReadVoucherInfo(result);
        }
        
        private System.IAsyncResult OnBeginReadVoucherInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int Id = ((int)(inValues[0]));
            string copyToFolder = ((string)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginReadVoucherInfo(Id, copyToFolder, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndReadVoucherInfo(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.VoucherInfo2 retVal = this.EndReadVoucherInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadVoucherInfoCompleted(object state) {
            if ((this.ReadVoucherInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadVoucherInfoCompleted(this, new ReadVoucherInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadVoucherInfoAsync(int Id, string copyToFolder, string s1, string s2) {
            this.ReadVoucherInfoAsync(Id, copyToFolder, s1, s2, null);
        }
        
        public void ReadVoucherInfoAsync(int Id, string copyToFolder, string s1, string s2, object userState) {
            if ((this.onBeginReadVoucherInfoDelegate == null)) {
                this.onBeginReadVoucherInfoDelegate = new BeginOperationDelegate(this.OnBeginReadVoucherInfo);
            }
            if ((this.onEndReadVoucherInfoDelegate == null)) {
                this.onEndReadVoucherInfoDelegate = new EndOperationDelegate(this.OnEndReadVoucherInfo);
            }
            if ((this.onReadVoucherInfoCompletedDelegate == null)) {
                this.onReadVoucherInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadVoucherInfoCompleted);
            }
            base.InvokeAsync(this.onBeginReadVoucherInfoDelegate, new object[] {
                        Id,
                        copyToFolder,
                        s1,
                        s2}, this.onEndReadVoucherInfoDelegate, this.onReadVoucherInfoCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo[] ReadData(int countryId, int retailerId, string s1, string s2) {
            return base.Channel.ReadData(countryId, retailerId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadData(int countryId, int retailerId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadData(countryId, retailerId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.VoucherInfo[] EndReadData(System.IAsyncResult result) {
            return base.Channel.EndReadData(result);
        }
        
        private System.IAsyncResult OnBeginReadData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            int retailerId = ((int)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginReadData(countryId, retailerId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndReadData(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.VoucherInfo[] retVal = this.EndReadData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadDataCompleted(object state) {
            if ((this.ReadDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadDataCompleted(this, new ReadDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadDataAsync(int countryId, int retailerId, string s1, string s2) {
            this.ReadDataAsync(countryId, retailerId, s1, s2, null);
        }
        
        public void ReadDataAsync(int countryId, int retailerId, string s1, string s2, object userState) {
            if ((this.onBeginReadDataDelegate == null)) {
                this.onBeginReadDataDelegate = new BeginOperationDelegate(this.OnBeginReadData);
            }
            if ((this.onEndReadDataDelegate == null)) {
                this.onEndReadDataDelegate = new EndOperationDelegate(this.OnEndReadData);
            }
            if ((this.onReadDataCompletedDelegate == null)) {
                this.onReadDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadDataCompleted);
            }
            base.InvokeAsync(this.onBeginReadDataDelegate, new object[] {
                        countryId,
                        retailerId,
                        s1,
                        s2}, this.onEndReadDataDelegate, this.onReadDataCompletedDelegate, userState);
        }
        
        public byte[] ReadData2(int id, bool isVoucher, int start, int length, string s1, string s2) {
            return base.Channel.ReadData2(id, isVoucher, start, length, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadData2(int id, bool isVoucher, int start, int length, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadData2(id, isVoucher, start, length, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndReadData2(System.IAsyncResult result) {
            return base.Channel.EndReadData2(result);
        }
        
        private System.IAsyncResult OnBeginReadData2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            bool isVoucher = ((bool)(inValues[1]));
            int start = ((int)(inValues[2]));
            int length = ((int)(inValues[3]));
            string s1 = ((string)(inValues[4]));
            string s2 = ((string)(inValues[5]));
            return this.BeginReadData2(id, isVoucher, start, length, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndReadData2(System.IAsyncResult result) {
            byte[] retVal = this.EndReadData2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadData2Completed(object state) {
            if ((this.ReadData2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadData2Completed(this, new ReadData2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadData2Async(int id, bool isVoucher, int start, int length, string s1, string s2) {
            this.ReadData2Async(id, isVoucher, start, length, s1, s2, null);
        }
        
        public void ReadData2Async(int id, bool isVoucher, int start, int length, string s1, string s2, object userState) {
            if ((this.onBeginReadData2Delegate == null)) {
                this.onBeginReadData2Delegate = new BeginOperationDelegate(this.OnBeginReadData2);
            }
            if ((this.onEndReadData2Delegate == null)) {
                this.onEndReadData2Delegate = new EndOperationDelegate(this.OnEndReadData2);
            }
            if ((this.onReadData2CompletedDelegate == null)) {
                this.onReadData2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadData2Completed);
            }
            base.InvokeAsync(this.onBeginReadData2Delegate, new object[] {
                        id,
                        isVoucher,
                        start,
                        length,
                        s1,
                        s2}, this.onEndReadData2Delegate, this.onReadData2CompletedDelegate, userState);
        }
        
        public void SaveData(string serverDirName, string fileName, byte[] data, string s1, string s2) {
            base.Channel.SaveData(serverDirName, fileName, data, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveData(string serverDirName, string fileName, byte[] data, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveData(serverDirName, fileName, data, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveData(System.IAsyncResult result) {
            base.Channel.EndSaveData(result);
        }
        
        private System.IAsyncResult OnBeginSaveData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string serverDirName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            byte[] data = ((byte[])(inValues[2]));
            string s1 = ((string)(inValues[3]));
            string s2 = ((string)(inValues[4]));
            return this.BeginSaveData(serverDirName, fileName, data, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSaveData(System.IAsyncResult result) {
            this.EndSaveData(result);
            return null;
        }
        
        private void OnSaveDataCompleted(object state) {
            if ((this.SaveDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveDataAsync1(string serverDirName, string fileName, byte[] data, string s1, string s2) {
            this.SaveDataAsync1(serverDirName, fileName, data, s1, s2, null);
        }
        
        public void SaveDataAsync1(string serverDirName, string fileName, byte[] data, string s1, string s2, object userState) {
            if ((this.onBeginSaveDataDelegate == null)) {
                this.onBeginSaveDataDelegate = new BeginOperationDelegate(this.OnBeginSaveData);
            }
            if ((this.onEndSaveDataDelegate == null)) {
                this.onEndSaveDataDelegate = new EndOperationDelegate(this.OnEndSaveData);
            }
            if ((this.onSaveDataCompletedDelegate == null)) {
                this.onSaveDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDataCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDataDelegate, new object[] {
                        serverDirName,
                        fileName,
                        data,
                        s1,
                        s2}, this.onEndSaveDataDelegate, this.onSaveDataCompletedDelegate, userState);
        }
        
        public void SaveDataAsync(string serverDirName, string fileName, byte[] data, long position, string s1, string s2) {
            base.Channel.SaveDataAsync(serverDirName, fileName, data, position, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveDataAsync(string serverDirName, string fileName, byte[] data, long position, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveDataAsync(serverDirName, fileName, data, position, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveDataAsync(System.IAsyncResult result) {
            base.Channel.EndSaveDataAsync(result);
        }
        
        private System.IAsyncResult OnBeginSaveDataAsync(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string serverDirName = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            byte[] data = ((byte[])(inValues[2]));
            long position = ((long)(inValues[3]));
            string s1 = ((string)(inValues[4]));
            string s2 = ((string)(inValues[5]));
            return this.BeginSaveDataAsync(serverDirName, fileName, data, position, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSaveDataAsync(System.IAsyncResult result) {
            this.EndSaveDataAsync(result);
            return null;
        }
        
        private void OnSaveDataAsyncCompleted(object state) {
            if ((this.SaveDataAsyncCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveDataAsyncCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveDataAsyncAsync(string serverDirName, string fileName, byte[] data, long position, string s1, string s2) {
            this.SaveDataAsyncAsync(serverDirName, fileName, data, position, s1, s2, null);
        }
        
        public void SaveDataAsyncAsync(string serverDirName, string fileName, byte[] data, long position, string s1, string s2, object userState) {
            if ((this.onBeginSaveDataAsyncDelegate == null)) {
                this.onBeginSaveDataAsyncDelegate = new BeginOperationDelegate(this.OnBeginSaveDataAsync);
            }
            if ((this.onEndSaveDataAsyncDelegate == null)) {
                this.onEndSaveDataAsyncDelegate = new EndOperationDelegate(this.OnEndSaveDataAsync);
            }
            if ((this.onSaveDataAsyncCompletedDelegate == null)) {
                this.onSaveDataAsyncCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDataAsyncCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDataAsyncDelegate, new object[] {
                        serverDirName,
                        fileName,
                        data,
                        position,
                        s1,
                        s2}, this.onEndSaveDataAsyncDelegate, this.onSaveDataAsyncCompletedDelegate, userState);
        }
        
        public void CommitVoucherChanges(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, string s1, string s2) {
            base.Channel.CommitVoucherChanges(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCommitVoucherChanges(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCommitVoucherChanges(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCommitVoucherChanges(System.IAsyncResult result) {
            base.Channel.EndCommitVoucherChanges(result);
        }
        
        private System.IAsyncResult OnBeginCommitVoucherChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string serverDirName = ((string)(inValues[0]));
            int jobId = ((int)(inValues[1]));
            int countryId = ((int)(inValues[2]));
            int retailerId = ((int)(inValues[3]));
            int voucherId = ((int)(inValues[4]));
            System.Nullable<int> folderId = ((System.Nullable<int>)(inValues[5]));
            string siteCode = ((string)(inValues[6]));
            string barCode = ((string)(inValues[7]));
            int locationId = ((int)(inValues[8]));
            int userId = ((int)(inValues[9]));
            string s1 = ((string)(inValues[10]));
            string s2 = ((string)(inValues[11]));
            return this.BeginCommitVoucherChanges(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndCommitVoucherChanges(System.IAsyncResult result) {
            this.EndCommitVoucherChanges(result);
            return null;
        }
        
        private void OnCommitVoucherChangesCompleted(object state) {
            if ((this.CommitVoucherChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommitVoucherChangesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CommitVoucherChangesAsync(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, string s1, string s2) {
            this.CommitVoucherChangesAsync(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, s1, s2, null);
        }
        
        public void CommitVoucherChangesAsync(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, string s1, string s2, object userState) {
            if ((this.onBeginCommitVoucherChangesDelegate == null)) {
                this.onBeginCommitVoucherChangesDelegate = new BeginOperationDelegate(this.OnBeginCommitVoucherChanges);
            }
            if ((this.onEndCommitVoucherChangesDelegate == null)) {
                this.onEndCommitVoucherChangesDelegate = new EndOperationDelegate(this.OnEndCommitVoucherChanges);
            }
            if ((this.onCommitVoucherChangesCompletedDelegate == null)) {
                this.onCommitVoucherChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommitVoucherChangesCompleted);
            }
            base.InvokeAsync(this.onBeginCommitVoucherChangesDelegate, new object[] {
                        serverDirName,
                        jobId,
                        countryId,
                        retailerId,
                        voucherId,
                        folderId,
                        siteCode,
                        barCode,
                        locationId,
                        userId,
                        s1,
                        s2}, this.onEndCommitVoucherChangesDelegate, this.onCommitVoucherChangesCompletedDelegate, userState);
        }
        
        public void CommitVoucherChangesModify_V2(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, int typeId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2) {
            base.Channel.CommitVoucherChangesModify_V2(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, typeId, action, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCommitVoucherChangesModify_V2(
                    string serverDirName, 
                    int jobId, 
                    int countryId, 
                    int retailerId, 
                    int voucherId, 
                    System.Nullable<int> folderId, 
                    string siteCode, 
                    string barCode, 
                    int locationId, 
                    int userId, 
                    int typeId, 
                    FintraxPTFImages.ScanServiceRef.ChangeContentType action, 
                    string s1, 
                    string s2, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginCommitVoucherChangesModify_V2(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, typeId, action, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCommitVoucherChangesModify_V2(System.IAsyncResult result) {
            base.Channel.EndCommitVoucherChangesModify_V2(result);
        }
        
        private System.IAsyncResult OnBeginCommitVoucherChangesModify_V2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string serverDirName = ((string)(inValues[0]));
            int jobId = ((int)(inValues[1]));
            int countryId = ((int)(inValues[2]));
            int retailerId = ((int)(inValues[3]));
            int voucherId = ((int)(inValues[4]));
            System.Nullable<int> folderId = ((System.Nullable<int>)(inValues[5]));
            string siteCode = ((string)(inValues[6]));
            string barCode = ((string)(inValues[7]));
            int locationId = ((int)(inValues[8]));
            int userId = ((int)(inValues[9]));
            int typeId = ((int)(inValues[10]));
            FintraxPTFImages.ScanServiceRef.ChangeContentType action = ((FintraxPTFImages.ScanServiceRef.ChangeContentType)(inValues[11]));
            string s1 = ((string)(inValues[12]));
            string s2 = ((string)(inValues[13]));
            return this.BeginCommitVoucherChangesModify_V2(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, typeId, action, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndCommitVoucherChangesModify_V2(System.IAsyncResult result) {
            this.EndCommitVoucherChangesModify_V2(result);
            return null;
        }
        
        private void OnCommitVoucherChangesModify_V2Completed(object state) {
            if ((this.CommitVoucherChangesModify_V2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommitVoucherChangesModify_V2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CommitVoucherChangesModify_V2Async(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, int typeId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2) {
            this.CommitVoucherChangesModify_V2Async(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, typeId, action, s1, s2, null);
        }
        
        public void CommitVoucherChangesModify_V2Async(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, int typeId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2, object userState) {
            if ((this.onBeginCommitVoucherChangesModify_V2Delegate == null)) {
                this.onBeginCommitVoucherChangesModify_V2Delegate = new BeginOperationDelegate(this.OnBeginCommitVoucherChangesModify_V2);
            }
            if ((this.onEndCommitVoucherChangesModify_V2Delegate == null)) {
                this.onEndCommitVoucherChangesModify_V2Delegate = new EndOperationDelegate(this.OnEndCommitVoucherChangesModify_V2);
            }
            if ((this.onCommitVoucherChangesModify_V2CompletedDelegate == null)) {
                this.onCommitVoucherChangesModify_V2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommitVoucherChangesModify_V2Completed);
            }
            base.InvokeAsync(this.onBeginCommitVoucherChangesModify_V2Delegate, new object[] {
                        serverDirName,
                        jobId,
                        countryId,
                        retailerId,
                        voucherId,
                        folderId,
                        siteCode,
                        barCode,
                        locationId,
                        userId,
                        typeId,
                        action,
                        s1,
                        s2}, this.onEndCommitVoucherChangesModify_V2Delegate, this.onCommitVoucherChangesModify_V2CompletedDelegate, userState);
        }
        
        public void CommitVoucherChangesModify(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2) {
            base.Channel.CommitVoucherChangesModify(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, action, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCommitVoucherChangesModify(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCommitVoucherChangesModify(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, action, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCommitVoucherChangesModify(System.IAsyncResult result) {
            base.Channel.EndCommitVoucherChangesModify(result);
        }
        
        private System.IAsyncResult OnBeginCommitVoucherChangesModify(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string serverDirName = ((string)(inValues[0]));
            int jobId = ((int)(inValues[1]));
            int countryId = ((int)(inValues[2]));
            int retailerId = ((int)(inValues[3]));
            int voucherId = ((int)(inValues[4]));
            System.Nullable<int> folderId = ((System.Nullable<int>)(inValues[5]));
            string siteCode = ((string)(inValues[6]));
            string barCode = ((string)(inValues[7]));
            int locationId = ((int)(inValues[8]));
            int userId = ((int)(inValues[9]));
            FintraxPTFImages.ScanServiceRef.ChangeContentType action = ((FintraxPTFImages.ScanServiceRef.ChangeContentType)(inValues[10]));
            string s1 = ((string)(inValues[11]));
            string s2 = ((string)(inValues[12]));
            return this.BeginCommitVoucherChangesModify(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, action, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndCommitVoucherChangesModify(System.IAsyncResult result) {
            this.EndCommitVoucherChangesModify(result);
            return null;
        }
        
        private void OnCommitVoucherChangesModifyCompleted(object state) {
            if ((this.CommitVoucherChangesModifyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommitVoucherChangesModifyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CommitVoucherChangesModifyAsync(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2) {
            this.CommitVoucherChangesModifyAsync(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, action, s1, s2, null);
        }
        
        public void CommitVoucherChangesModifyAsync(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, FintraxPTFImages.ScanServiceRef.ChangeContentType action, string s1, string s2, object userState) {
            if ((this.onBeginCommitVoucherChangesModifyDelegate == null)) {
                this.onBeginCommitVoucherChangesModifyDelegate = new BeginOperationDelegate(this.OnBeginCommitVoucherChangesModify);
            }
            if ((this.onEndCommitVoucherChangesModifyDelegate == null)) {
                this.onEndCommitVoucherChangesModifyDelegate = new EndOperationDelegate(this.OnEndCommitVoucherChangesModify);
            }
            if ((this.onCommitVoucherChangesModifyCompletedDelegate == null)) {
                this.onCommitVoucherChangesModifyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommitVoucherChangesModifyCompleted);
            }
            base.InvokeAsync(this.onBeginCommitVoucherChangesModifyDelegate, new object[] {
                        serverDirName,
                        jobId,
                        countryId,
                        retailerId,
                        voucherId,
                        folderId,
                        siteCode,
                        barCode,
                        locationId,
                        userId,
                        action,
                        s1,
                        s2}, this.onEndCommitVoucherChangesModifyDelegate, this.onCommitVoucherChangesModifyCompletedDelegate, userState);
        }
        
        public void CommitFileChanges(string serverDirName, int countryId, System.Nullable<int> folderId, int locationId, int userId, string s1, string s2) {
            base.Channel.CommitFileChanges(serverDirName, countryId, folderId, locationId, userId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCommitFileChanges(string serverDirName, int countryId, System.Nullable<int> folderId, int locationId, int userId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCommitFileChanges(serverDirName, countryId, folderId, locationId, userId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCommitFileChanges(System.IAsyncResult result) {
            base.Channel.EndCommitFileChanges(result);
        }
        
        private System.IAsyncResult OnBeginCommitFileChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string serverDirName = ((string)(inValues[0]));
            int countryId = ((int)(inValues[1]));
            System.Nullable<int> folderId = ((System.Nullable<int>)(inValues[2]));
            int locationId = ((int)(inValues[3]));
            int userId = ((int)(inValues[4]));
            string s1 = ((string)(inValues[5]));
            string s2 = ((string)(inValues[6]));
            return this.BeginCommitFileChanges(serverDirName, countryId, folderId, locationId, userId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndCommitFileChanges(System.IAsyncResult result) {
            this.EndCommitFileChanges(result);
            return null;
        }
        
        private void OnCommitFileChangesCompleted(object state) {
            if ((this.CommitFileChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommitFileChangesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CommitFileChangesAsync(string serverDirName, int countryId, System.Nullable<int> folderId, int locationId, int userId, string s1, string s2) {
            this.CommitFileChangesAsync(serverDirName, countryId, folderId, locationId, userId, s1, s2, null);
        }
        
        public void CommitFileChangesAsync(string serverDirName, int countryId, System.Nullable<int> folderId, int locationId, int userId, string s1, string s2, object userState) {
            if ((this.onBeginCommitFileChangesDelegate == null)) {
                this.onBeginCommitFileChangesDelegate = new BeginOperationDelegate(this.OnBeginCommitFileChanges);
            }
            if ((this.onEndCommitFileChangesDelegate == null)) {
                this.onEndCommitFileChangesDelegate = new EndOperationDelegate(this.OnEndCommitFileChanges);
            }
            if ((this.onCommitFileChangesCompletedDelegate == null)) {
                this.onCommitFileChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommitFileChangesCompleted);
            }
            base.InvokeAsync(this.onBeginCommitFileChangesDelegate, new object[] {
                        serverDirName,
                        countryId,
                        folderId,
                        locationId,
                        userId,
                        s1,
                        s2}, this.onEndCommitFileChangesDelegate, this.onCommitFileChangesCompletedDelegate, userState);
        }
        
        public void ValidateVoucher(int countryId, bool ss, int retailerId, int voucherId, bool voucherMustExist, string s1, string s2) {
            base.Channel.ValidateVoucher(countryId, ss, retailerId, voucherId, voucherMustExist, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidateVoucher(int countryId, bool ss, int retailerId, int voucherId, bool voucherMustExist, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateVoucher(countryId, ss, retailerId, voucherId, voucherMustExist, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndValidateVoucher(System.IAsyncResult result) {
            base.Channel.EndValidateVoucher(result);
        }
        
        private System.IAsyncResult OnBeginValidateVoucher(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            bool ss = ((bool)(inValues[1]));
            int retailerId = ((int)(inValues[2]));
            int voucherId = ((int)(inValues[3]));
            bool voucherMustExist = ((bool)(inValues[4]));
            string s1 = ((string)(inValues[5]));
            string s2 = ((string)(inValues[6]));
            return this.BeginValidateVoucher(countryId, ss, retailerId, voucherId, voucherMustExist, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndValidateVoucher(System.IAsyncResult result) {
            this.EndValidateVoucher(result);
            return null;
        }
        
        private void OnValidateVoucherCompleted(object state) {
            if ((this.ValidateVoucherCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateVoucherCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateVoucherAsync(int countryId, bool ss, int retailerId, int voucherId, bool voucherMustExist, string s1, string s2) {
            this.ValidateVoucherAsync(countryId, ss, retailerId, voucherId, voucherMustExist, s1, s2, null);
        }
        
        public void ValidateVoucherAsync(int countryId, bool ss, int retailerId, int voucherId, bool voucherMustExist, string s1, string s2, object userState) {
            if ((this.onBeginValidateVoucherDelegate == null)) {
                this.onBeginValidateVoucherDelegate = new BeginOperationDelegate(this.OnBeginValidateVoucher);
            }
            if ((this.onEndValidateVoucherDelegate == null)) {
                this.onEndValidateVoucherDelegate = new EndOperationDelegate(this.OnEndValidateVoucher);
            }
            if ((this.onValidateVoucherCompletedDelegate == null)) {
                this.onValidateVoucherCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateVoucherCompleted);
            }
            base.InvokeAsync(this.onBeginValidateVoucherDelegate, new object[] {
                        countryId,
                        ss,
                        retailerId,
                        voucherId,
                        voucherMustExist,
                        s1,
                        s2}, this.onEndValidateVoucherDelegate, this.onValidateVoucherCompletedDelegate, userState);
        }
        
        public string FindVoucher(int countryId, int voucherId, int voucherIdCD, string s1, string s2) {
            return base.Channel.FindVoucher(countryId, voucherId, voucherIdCD, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindVoucher(int countryId, int voucherId, int voucherIdCD, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindVoucher(countryId, voucherId, voucherIdCD, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndFindVoucher(System.IAsyncResult result) {
            return base.Channel.EndFindVoucher(result);
        }
        
        private System.IAsyncResult OnBeginFindVoucher(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            int voucherId = ((int)(inValues[1]));
            int voucherIdCD = ((int)(inValues[2]));
            string s1 = ((string)(inValues[3]));
            string s2 = ((string)(inValues[4]));
            return this.BeginFindVoucher(countryId, voucherId, voucherIdCD, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndFindVoucher(System.IAsyncResult result) {
            string retVal = this.EndFindVoucher(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindVoucherCompleted(object state) {
            if ((this.FindVoucherCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindVoucherCompleted(this, new FindVoucherCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindVoucherAsync(int countryId, int voucherId, int voucherIdCD, string s1, string s2) {
            this.FindVoucherAsync(countryId, voucherId, voucherIdCD, s1, s2, null);
        }
        
        public void FindVoucherAsync(int countryId, int voucherId, int voucherIdCD, string s1, string s2, object userState) {
            if ((this.onBeginFindVoucherDelegate == null)) {
                this.onBeginFindVoucherDelegate = new BeginOperationDelegate(this.OnBeginFindVoucher);
            }
            if ((this.onEndFindVoucherDelegate == null)) {
                this.onEndFindVoucherDelegate = new EndOperationDelegate(this.OnEndFindVoucher);
            }
            if ((this.onFindVoucherCompletedDelegate == null)) {
                this.onFindVoucherCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindVoucherCompleted);
            }
            base.InvokeAsync(this.onBeginFindVoucherDelegate, new object[] {
                        countryId,
                        voucherId,
                        voucherIdCD,
                        s1,
                        s2}, this.onEndFindVoucherDelegate, this.onFindVoucherCompletedDelegate, userState);
        }
        
        public int[] FindVoucherImage(int countryId, int voucherId, int voucherIdCD, string s1, string s2) {
            return base.Channel.FindVoucherImage(countryId, voucherId, voucherIdCD, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindVoucherImage(int countryId, int voucherId, int voucherIdCD, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindVoucherImage(countryId, voucherId, voucherIdCD, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int[] EndFindVoucherImage(System.IAsyncResult result) {
            return base.Channel.EndFindVoucherImage(result);
        }
        
        private System.IAsyncResult OnBeginFindVoucherImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            int voucherId = ((int)(inValues[1]));
            int voucherIdCD = ((int)(inValues[2]));
            string s1 = ((string)(inValues[3]));
            string s2 = ((string)(inValues[4]));
            return this.BeginFindVoucherImage(countryId, voucherId, voucherIdCD, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndFindVoucherImage(System.IAsyncResult result) {
            int[] retVal = this.EndFindVoucherImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindVoucherImageCompleted(object state) {
            if ((this.FindVoucherImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindVoucherImageCompleted(this, new FindVoucherImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindVoucherImageAsync(int countryId, int voucherId, int voucherIdCD, string s1, string s2) {
            this.FindVoucherImageAsync(countryId, voucherId, voucherIdCD, s1, s2, null);
        }
        
        public void FindVoucherImageAsync(int countryId, int voucherId, int voucherIdCD, string s1, string s2, object userState) {
            if ((this.onBeginFindVoucherImageDelegate == null)) {
                this.onBeginFindVoucherImageDelegate = new BeginOperationDelegate(this.OnBeginFindVoucherImage);
            }
            if ((this.onEndFindVoucherImageDelegate == null)) {
                this.onEndFindVoucherImageDelegate = new EndOperationDelegate(this.OnEndFindVoucherImage);
            }
            if ((this.onFindVoucherImageCompletedDelegate == null)) {
                this.onFindVoucherImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindVoucherImageCompleted);
            }
            base.InvokeAsync(this.onBeginFindVoucherImageDelegate, new object[] {
                        countryId,
                        voucherId,
                        voucherIdCD,
                        s1,
                        s2}, this.onEndFindVoucherImageDelegate, this.onFindVoucherImageCompletedDelegate, userState);
        }
        
        public string ReadCoverInfo(int id, string s1, string s2) {
            return base.Channel.ReadCoverInfo(id, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadCoverInfo(int id, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadCoverInfo(id, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndReadCoverInfo(System.IAsyncResult result) {
            return base.Channel.EndReadCoverInfo(result);
        }
        
        private System.IAsyncResult OnBeginReadCoverInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginReadCoverInfo(id, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndReadCoverInfo(System.IAsyncResult result) {
            string retVal = this.EndReadCoverInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadCoverInfoCompleted(object state) {
            if ((this.ReadCoverInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadCoverInfoCompleted(this, new ReadCoverInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadCoverInfoAsync(int id, string s1, string s2) {
            this.ReadCoverInfoAsync(id, s1, s2, null);
        }
        
        public void ReadCoverInfoAsync(int id, string s1, string s2, object userState) {
            if ((this.onBeginReadCoverInfoDelegate == null)) {
                this.onBeginReadCoverInfoDelegate = new BeginOperationDelegate(this.OnBeginReadCoverInfo);
            }
            if ((this.onEndReadCoverInfoDelegate == null)) {
                this.onEndReadCoverInfoDelegate = new EndOperationDelegate(this.OnEndReadCoverInfo);
            }
            if ((this.onReadCoverInfoCompletedDelegate == null)) {
                this.onReadCoverInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadCoverInfoCompleted);
            }
            base.InvokeAsync(this.onBeginReadCoverInfoDelegate, new object[] {
                        id,
                        s1,
                        s2}, this.onEndReadCoverInfoDelegate, this.onReadCoverInfoCompletedDelegate, userState);
        }
        
        public void SaveHistory(int operatorCountryId, int operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.Guid operationId, int brIsoId, int brId, int vId, int v2Id, int count, string details, string s1, string s2) {
            base.Channel.SaveHistory(operatorCountryId, operatorUserId, operationType, operationId, brIsoId, brId, vId, v2Id, count, details, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaveHistory(int operatorCountryId, int operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.Guid operationId, int brIsoId, int brId, int vId, int v2Id, int count, string details, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveHistory(operatorCountryId, operatorUserId, operationType, operationId, brIsoId, brId, vId, v2Id, count, details, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSaveHistory(System.IAsyncResult result) {
            base.Channel.EndSaveHistory(result);
        }
        
        private System.IAsyncResult OnBeginSaveHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int operatorCountryId = ((int)(inValues[0]));
            int operatorUserId = ((int)(inValues[1]));
            FintraxPTFImages.ScanServiceRef.OperationHistory operationType = ((FintraxPTFImages.ScanServiceRef.OperationHistory)(inValues[2]));
            System.Guid operationId = ((System.Guid)(inValues[3]));
            int brIsoId = ((int)(inValues[4]));
            int brId = ((int)(inValues[5]));
            int vId = ((int)(inValues[6]));
            int v2Id = ((int)(inValues[7]));
            int count = ((int)(inValues[8]));
            string details = ((string)(inValues[9]));
            string s1 = ((string)(inValues[10]));
            string s2 = ((string)(inValues[11]));
            return this.BeginSaveHistory(operatorCountryId, operatorUserId, operationType, operationId, brIsoId, brId, vId, v2Id, count, details, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSaveHistory(System.IAsyncResult result) {
            this.EndSaveHistory(result);
            return null;
        }
        
        private void OnSaveHistoryCompleted(object state) {
            if ((this.SaveHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveHistoryAsync(int operatorCountryId, int operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.Guid operationId, int brIsoId, int brId, int vId, int v2Id, int count, string details, string s1, string s2) {
            this.SaveHistoryAsync(operatorCountryId, operatorUserId, operationType, operationId, brIsoId, brId, vId, v2Id, count, details, s1, s2, null);
        }
        
        public void SaveHistoryAsync(int operatorCountryId, int operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.Guid operationId, int brIsoId, int brId, int vId, int v2Id, int count, string details, string s1, string s2, object userState) {
            if ((this.onBeginSaveHistoryDelegate == null)) {
                this.onBeginSaveHistoryDelegate = new BeginOperationDelegate(this.OnBeginSaveHistory);
            }
            if ((this.onEndSaveHistoryDelegate == null)) {
                this.onEndSaveHistoryDelegate = new EndOperationDelegate(this.OnEndSaveHistory);
            }
            if ((this.onSaveHistoryCompletedDelegate == null)) {
                this.onSaveHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginSaveHistoryDelegate, new object[] {
                        operatorCountryId,
                        operatorUserId,
                        operationType,
                        operationId,
                        brIsoId,
                        brId,
                        vId,
                        v2Id,
                        count,
                        details,
                        s1,
                        s2}, this.onEndSaveHistoryDelegate, this.onSaveHistoryCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.HistoryByCountryInfo[] ReadHistory(int operatorCountryId, System.Nullable<int> operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.DateTime from, System.DateTime to, string s1, string s2) {
            return base.Channel.ReadHistory(operatorCountryId, operatorUserId, operationType, from, to, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadHistory(int operatorCountryId, System.Nullable<int> operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.DateTime from, System.DateTime to, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadHistory(operatorCountryId, operatorUserId, operationType, from, to, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.HistoryByCountryInfo[] EndReadHistory(System.IAsyncResult result) {
            return base.Channel.EndReadHistory(result);
        }
        
        private System.IAsyncResult OnBeginReadHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int operatorCountryId = ((int)(inValues[0]));
            System.Nullable<int> operatorUserId = ((System.Nullable<int>)(inValues[1]));
            FintraxPTFImages.ScanServiceRef.OperationHistory operationType = ((FintraxPTFImages.ScanServiceRef.OperationHistory)(inValues[2]));
            System.DateTime from = ((System.DateTime)(inValues[3]));
            System.DateTime to = ((System.DateTime)(inValues[4]));
            string s1 = ((string)(inValues[5]));
            string s2 = ((string)(inValues[6]));
            return this.BeginReadHistory(operatorCountryId, operatorUserId, operationType, from, to, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndReadHistory(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.HistoryByCountryInfo[] retVal = this.EndReadHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadHistoryCompleted(object state) {
            if ((this.ReadHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadHistoryCompleted(this, new ReadHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadHistoryAsync(int operatorCountryId, System.Nullable<int> operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.DateTime from, System.DateTime to, string s1, string s2) {
            this.ReadHistoryAsync(operatorCountryId, operatorUserId, operationType, from, to, s1, s2, null);
        }
        
        public void ReadHistoryAsync(int operatorCountryId, System.Nullable<int> operatorUserId, FintraxPTFImages.ScanServiceRef.OperationHistory operationType, System.DateTime from, System.DateTime to, string s1, string s2, object userState) {
            if ((this.onBeginReadHistoryDelegate == null)) {
                this.onBeginReadHistoryDelegate = new BeginOperationDelegate(this.OnBeginReadHistory);
            }
            if ((this.onEndReadHistoryDelegate == null)) {
                this.onEndReadHistoryDelegate = new EndOperationDelegate(this.OnEndReadHistory);
            }
            if ((this.onReadHistoryCompletedDelegate == null)) {
                this.onReadHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginReadHistoryDelegate, new object[] {
                        operatorCountryId,
                        operatorUserId,
                        operationType,
                        from,
                        to,
                        s1,
                        s2}, this.onEndReadHistoryDelegate, this.onReadHistoryCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.RetailerPrinterInfo[] ReadRetailerPrinterInfo(int countryId, string s1, string s2) {
            return base.Channel.ReadRetailerPrinterInfo(countryId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadRetailerPrinterInfo(int countryId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadRetailerPrinterInfo(countryId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.RetailerPrinterInfo[] EndReadRetailerPrinterInfo(System.IAsyncResult result) {
            return base.Channel.EndReadRetailerPrinterInfo(result);
        }
        
        private System.IAsyncResult OnBeginReadRetailerPrinterInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginReadRetailerPrinterInfo(countryId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndReadRetailerPrinterInfo(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.RetailerPrinterInfo[] retVal = this.EndReadRetailerPrinterInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadRetailerPrinterInfoCompleted(object state) {
            if ((this.ReadRetailerPrinterInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadRetailerPrinterInfoCompleted(this, new ReadRetailerPrinterInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadRetailerPrinterInfoAsync(int countryId, string s1, string s2) {
            this.ReadRetailerPrinterInfoAsync(countryId, s1, s2, null);
        }
        
        public void ReadRetailerPrinterInfoAsync(int countryId, string s1, string s2, object userState) {
            if ((this.onBeginReadRetailerPrinterInfoDelegate == null)) {
                this.onBeginReadRetailerPrinterInfoDelegate = new BeginOperationDelegate(this.OnBeginReadRetailerPrinterInfo);
            }
            if ((this.onEndReadRetailerPrinterInfoDelegate == null)) {
                this.onEndReadRetailerPrinterInfoDelegate = new EndOperationDelegate(this.OnEndReadRetailerPrinterInfo);
            }
            if ((this.onReadRetailerPrinterInfoCompletedDelegate == null)) {
                this.onReadRetailerPrinterInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadRetailerPrinterInfoCompleted);
            }
            base.InvokeAsync(this.onBeginReadRetailerPrinterInfoDelegate, new object[] {
                        countryId,
                        s1,
                        s2}, this.onEndReadRetailerPrinterInfoDelegate, this.onReadRetailerPrinterInfoCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.fileInfo[] SelectFilesBySql(string whereClause, string s1, string s2) {
            return base.Channel.SelectFilesBySql(whereClause, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSelectFilesBySql(string whereClause, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectFilesBySql(whereClause, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.fileInfo[] EndSelectFilesBySql(System.IAsyncResult result) {
            return base.Channel.EndSelectFilesBySql(result);
        }
        
        private System.IAsyncResult OnBeginSelectFilesBySql(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string whereClause = ((string)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginSelectFilesBySql(whereClause, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSelectFilesBySql(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.fileInfo[] retVal = this.EndSelectFilesBySql(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectFilesBySqlCompleted(object state) {
            if ((this.SelectFilesBySqlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectFilesBySqlCompleted(this, new SelectFilesBySqlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectFilesBySqlAsync(string whereClause, string s1, string s2) {
            this.SelectFilesBySqlAsync(whereClause, s1, s2, null);
        }
        
        public void SelectFilesBySqlAsync(string whereClause, string s1, string s2, object userState) {
            if ((this.onBeginSelectFilesBySqlDelegate == null)) {
                this.onBeginSelectFilesBySqlDelegate = new BeginOperationDelegate(this.OnBeginSelectFilesBySql);
            }
            if ((this.onEndSelectFilesBySqlDelegate == null)) {
                this.onEndSelectFilesBySqlDelegate = new EndOperationDelegate(this.OnEndSelectFilesBySql);
            }
            if ((this.onSelectFilesBySqlCompletedDelegate == null)) {
                this.onSelectFilesBySqlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectFilesBySqlCompleted);
            }
            base.InvokeAsync(this.onBeginSelectFilesBySqlDelegate, new object[] {
                        whereClause,
                        s1,
                        s2}, this.onEndSelectFilesBySqlDelegate, this.onSelectFilesBySqlCompletedDelegate, userState);
        }
        
        public void UpdateVouchersOrFilesBySql(string setSql, string whereClause, bool isVoucher, string s1, string s2) {
            base.Channel.UpdateVouchersOrFilesBySql(setSql, whereClause, isVoucher, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateVouchersOrFilesBySql(string setSql, string whereClause, bool isVoucher, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVouchersOrFilesBySql(setSql, whereClause, isVoucher, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateVouchersOrFilesBySql(System.IAsyncResult result) {
            base.Channel.EndUpdateVouchersOrFilesBySql(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVouchersOrFilesBySql(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string setSql = ((string)(inValues[0]));
            string whereClause = ((string)(inValues[1]));
            bool isVoucher = ((bool)(inValues[2]));
            string s1 = ((string)(inValues[3]));
            string s2 = ((string)(inValues[4]));
            return this.BeginUpdateVouchersOrFilesBySql(setSql, whereClause, isVoucher, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndUpdateVouchersOrFilesBySql(System.IAsyncResult result) {
            this.EndUpdateVouchersOrFilesBySql(result);
            return null;
        }
        
        private void OnUpdateVouchersOrFilesBySqlCompleted(object state) {
            if ((this.UpdateVouchersOrFilesBySqlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVouchersOrFilesBySqlCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVouchersOrFilesBySqlAsync(string setSql, string whereClause, bool isVoucher, string s1, string s2) {
            this.UpdateVouchersOrFilesBySqlAsync(setSql, whereClause, isVoucher, s1, s2, null);
        }
        
        public void UpdateVouchersOrFilesBySqlAsync(string setSql, string whereClause, bool isVoucher, string s1, string s2, object userState) {
            if ((this.onBeginUpdateVouchersOrFilesBySqlDelegate == null)) {
                this.onBeginUpdateVouchersOrFilesBySqlDelegate = new BeginOperationDelegate(this.OnBeginUpdateVouchersOrFilesBySql);
            }
            if ((this.onEndUpdateVouchersOrFilesBySqlDelegate == null)) {
                this.onEndUpdateVouchersOrFilesBySqlDelegate = new EndOperationDelegate(this.OnEndUpdateVouchersOrFilesBySql);
            }
            if ((this.onUpdateVouchersOrFilesBySqlCompletedDelegate == null)) {
                this.onUpdateVouchersOrFilesBySqlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVouchersOrFilesBySqlCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVouchersOrFilesBySqlDelegate, new object[] {
                        setSql,
                        whereClause,
                        isVoucher,
                        s1,
                        s2}, this.onEndUpdateVouchersOrFilesBySqlDelegate, this.onUpdateVouchersOrFilesBySqlCompletedDelegate, userState);
        }
        
        public void AddFolder(System.Nullable<int> toParentId, string name, int countryId, int userId, string s1, string s2) {
            base.Channel.AddFolder(toParentId, name, countryId, userId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddFolder(System.Nullable<int> toParentId, string name, int countryId, int userId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddFolder(toParentId, name, countryId, userId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddFolder(System.IAsyncResult result) {
            base.Channel.EndAddFolder(result);
        }
        
        private System.IAsyncResult OnBeginAddFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> toParentId = ((System.Nullable<int>)(inValues[0]));
            string name = ((string)(inValues[1]));
            int countryId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            string s1 = ((string)(inValues[4]));
            string s2 = ((string)(inValues[5]));
            return this.BeginAddFolder(toParentId, name, countryId, userId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndAddFolder(System.IAsyncResult result) {
            this.EndAddFolder(result);
            return null;
        }
        
        private void OnAddFolderCompleted(object state) {
            if ((this.AddFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddFolderAsync(System.Nullable<int> toParentId, string name, int countryId, int userId, string s1, string s2) {
            this.AddFolderAsync(toParentId, name, countryId, userId, s1, s2, null);
        }
        
        public void AddFolderAsync(System.Nullable<int> toParentId, string name, int countryId, int userId, string s1, string s2, object userState) {
            if ((this.onBeginAddFolderDelegate == null)) {
                this.onBeginAddFolderDelegate = new BeginOperationDelegate(this.OnBeginAddFolder);
            }
            if ((this.onEndAddFolderDelegate == null)) {
                this.onEndAddFolderDelegate = new EndOperationDelegate(this.OnEndAddFolder);
            }
            if ((this.onAddFolderCompletedDelegate == null)) {
                this.onAddFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddFolderCompleted);
            }
            base.InvokeAsync(this.onBeginAddFolderDelegate, new object[] {
                        toParentId,
                        name,
                        countryId,
                        userId,
                        s1,
                        s2}, this.onEndAddFolderDelegate, this.onAddFolderCompletedDelegate, userState);
        }
        
        public void UpdateFolder(int folderId, string name, System.Nullable<int> parentId, int countryId, int userId, string s1, string s2) {
            base.Channel.UpdateFolder(folderId, name, parentId, countryId, userId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateFolder(int folderId, string name, System.Nullable<int> parentId, int countryId, int userId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFolder(folderId, name, parentId, countryId, userId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateFolder(System.IAsyncResult result) {
            base.Channel.EndUpdateFolder(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int folderId = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            System.Nullable<int> parentId = ((System.Nullable<int>)(inValues[2]));
            int countryId = ((int)(inValues[3]));
            int userId = ((int)(inValues[4]));
            string s1 = ((string)(inValues[5]));
            string s2 = ((string)(inValues[6]));
            return this.BeginUpdateFolder(folderId, name, parentId, countryId, userId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndUpdateFolder(System.IAsyncResult result) {
            this.EndUpdateFolder(result);
            return null;
        }
        
        private void OnUpdateFolderCompleted(object state) {
            if ((this.UpdateFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFolderAsync(int folderId, string name, System.Nullable<int> parentId, int countryId, int userId, string s1, string s2) {
            this.UpdateFolderAsync(folderId, name, parentId, countryId, userId, s1, s2, null);
        }
        
        public void UpdateFolderAsync(int folderId, string name, System.Nullable<int> parentId, int countryId, int userId, string s1, string s2, object userState) {
            if ((this.onBeginUpdateFolderDelegate == null)) {
                this.onBeginUpdateFolderDelegate = new BeginOperationDelegate(this.OnBeginUpdateFolder);
            }
            if ((this.onEndUpdateFolderDelegate == null)) {
                this.onEndUpdateFolderDelegate = new EndOperationDelegate(this.OnEndUpdateFolder);
            }
            if ((this.onUpdateFolderCompletedDelegate == null)) {
                this.onUpdateFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFolderCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFolderDelegate, new object[] {
                        folderId,
                        name,
                        parentId,
                        countryId,
                        userId,
                        s1,
                        s2}, this.onEndUpdateFolderDelegate, this.onUpdateFolderCompletedDelegate, userState);
        }
        
        public void DeleteFolder(int folderId, string s1, string s2) {
            base.Channel.DeleteFolder(folderId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteFolder(int folderId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFolder(folderId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteFolder(System.IAsyncResult result) {
            base.Channel.EndDeleteFolder(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int folderId = ((int)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginDeleteFolder(folderId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndDeleteFolder(System.IAsyncResult result) {
            this.EndDeleteFolder(result);
            return null;
        }
        
        private void OnDeleteFolderCompleted(object state) {
            if ((this.DeleteFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFolderAsync(int folderId, string s1, string s2) {
            this.DeleteFolderAsync(folderId, s1, s2, null);
        }
        
        public void DeleteFolderAsync(int folderId, string s1, string s2, object userState) {
            if ((this.onBeginDeleteFolderDelegate == null)) {
                this.onBeginDeleteFolderDelegate = new BeginOperationDelegate(this.OnBeginDeleteFolder);
            }
            if ((this.onEndDeleteFolderDelegate == null)) {
                this.onEndDeleteFolderDelegate = new EndOperationDelegate(this.OnEndDeleteFolder);
            }
            if ((this.onDeleteFolderCompletedDelegate == null)) {
                this.onDeleteFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFolderCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFolderDelegate, new object[] {
                        folderId,
                        s1,
                        s2}, this.onEndDeleteFolderDelegate, this.onDeleteFolderCompletedDelegate, userState);
        }
        
        public void DeleteFile(int id, bool isVoucher, string s1, string s2) {
            base.Channel.DeleteFile(id, isVoucher, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteFile(int id, bool isVoucher, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFile(id, isVoucher, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteFile(System.IAsyncResult result) {
            base.Channel.EndDeleteFile(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            bool isVoucher = ((bool)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginDeleteFile(id, isVoucher, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndDeleteFile(System.IAsyncResult result) {
            this.EndDeleteFile(result);
            return null;
        }
        
        private void OnDeleteFileCompleted(object state) {
            if ((this.DeleteFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFileAsync(int id, bool isVoucher, string s1, string s2) {
            this.DeleteFileAsync(id, isVoucher, s1, s2, null);
        }
        
        public void DeleteFileAsync(int id, bool isVoucher, string s1, string s2, object userState) {
            if ((this.onBeginDeleteFileDelegate == null)) {
                this.onBeginDeleteFileDelegate = new BeginOperationDelegate(this.OnBeginDeleteFile);
            }
            if ((this.onEndDeleteFileDelegate == null)) {
                this.onEndDeleteFileDelegate = new EndOperationDelegate(this.OnEndDeleteFile);
            }
            if ((this.onDeleteFileCompletedDelegate == null)) {
                this.onDeleteFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFileCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFileDelegate, new object[] {
                        id,
                        isVoucher,
                        s1,
                        s2}, this.onEndDeleteFileDelegate, this.onDeleteFileCompletedDelegate, userState);
        }
        
        public void DeleteAllFilesInFolder(int folderId, string s1, string s2) {
            base.Channel.DeleteAllFilesInFolder(folderId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteAllFilesInFolder(int folderId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAllFilesInFolder(folderId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteAllFilesInFolder(System.IAsyncResult result) {
            base.Channel.EndDeleteAllFilesInFolder(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAllFilesInFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int folderId = ((int)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginDeleteAllFilesInFolder(folderId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndDeleteAllFilesInFolder(System.IAsyncResult result) {
            this.EndDeleteAllFilesInFolder(result);
            return null;
        }
        
        private void OnDeleteAllFilesInFolderCompleted(object state) {
            if ((this.DeleteAllFilesInFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAllFilesInFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAllFilesInFolderAsync(int folderId, string s1, string s2) {
            this.DeleteAllFilesInFolderAsync(folderId, s1, s2, null);
        }
        
        public void DeleteAllFilesInFolderAsync(int folderId, string s1, string s2, object userState) {
            if ((this.onBeginDeleteAllFilesInFolderDelegate == null)) {
                this.onBeginDeleteAllFilesInFolderDelegate = new BeginOperationDelegate(this.OnBeginDeleteAllFilesInFolder);
            }
            if ((this.onEndDeleteAllFilesInFolderDelegate == null)) {
                this.onEndDeleteAllFilesInFolderDelegate = new EndOperationDelegate(this.OnEndDeleteAllFilesInFolder);
            }
            if ((this.onDeleteAllFilesInFolderCompletedDelegate == null)) {
                this.onDeleteAllFilesInFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAllFilesInFolderCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAllFilesInFolderDelegate, new object[] {
                        folderId,
                        s1,
                        s2}, this.onEndDeleteAllFilesInFolderDelegate, this.onDeleteAllFilesInFolderCompletedDelegate, userState);
        }
        
        public void RenameFolder(int folderId, string name, string s1, string s2) {
            base.Channel.RenameFolder(folderId, name, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRenameFolder(int folderId, string name, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRenameFolder(folderId, name, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRenameFolder(System.IAsyncResult result) {
            base.Channel.EndRenameFolder(result);
        }
        
        private System.IAsyncResult OnBeginRenameFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int folderId = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginRenameFolder(folderId, name, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndRenameFolder(System.IAsyncResult result) {
            this.EndRenameFolder(result);
            return null;
        }
        
        private void OnRenameFolderCompleted(object state) {
            if ((this.RenameFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RenameFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RenameFolderAsync(int folderId, string name, string s1, string s2) {
            this.RenameFolderAsync(folderId, name, s1, s2, null);
        }
        
        public void RenameFolderAsync(int folderId, string name, string s1, string s2, object userState) {
            if ((this.onBeginRenameFolderDelegate == null)) {
                this.onBeginRenameFolderDelegate = new BeginOperationDelegate(this.OnBeginRenameFolder);
            }
            if ((this.onEndRenameFolderDelegate == null)) {
                this.onEndRenameFolderDelegate = new EndOperationDelegate(this.OnEndRenameFolder);
            }
            if ((this.onRenameFolderCompletedDelegate == null)) {
                this.onRenameFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRenameFolderCompleted);
            }
            base.InvokeAsync(this.onBeginRenameFolderDelegate, new object[] {
                        folderId,
                        name,
                        s1,
                        s2}, this.onEndRenameFolderDelegate, this.onRenameFolderCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.FolderInfo[] SelectFoldersByParent(System.Nullable<int> parentId, int createdByIsoId, string s1, string s2) {
            return base.Channel.SelectFoldersByParent(parentId, createdByIsoId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSelectFoldersByParent(System.Nullable<int> parentId, int createdByIsoId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectFoldersByParent(parentId, createdByIsoId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.FolderInfo[] EndSelectFoldersByParent(System.IAsyncResult result) {
            return base.Channel.EndSelectFoldersByParent(result);
        }
        
        private System.IAsyncResult OnBeginSelectFoldersByParent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Nullable<int> parentId = ((System.Nullable<int>)(inValues[0]));
            int createdByIsoId = ((int)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginSelectFoldersByParent(parentId, createdByIsoId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSelectFoldersByParent(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.FolderInfo[] retVal = this.EndSelectFoldersByParent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectFoldersByParentCompleted(object state) {
            if ((this.SelectFoldersByParentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectFoldersByParentCompleted(this, new SelectFoldersByParentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectFoldersByParentAsync(System.Nullable<int> parentId, int createdByIsoId, string s1, string s2) {
            this.SelectFoldersByParentAsync(parentId, createdByIsoId, s1, s2, null);
        }
        
        public void SelectFoldersByParentAsync(System.Nullable<int> parentId, int createdByIsoId, string s1, string s2, object userState) {
            if ((this.onBeginSelectFoldersByParentDelegate == null)) {
                this.onBeginSelectFoldersByParentDelegate = new BeginOperationDelegate(this.OnBeginSelectFoldersByParent);
            }
            if ((this.onEndSelectFoldersByParentDelegate == null)) {
                this.onEndSelectFoldersByParentDelegate = new EndOperationDelegate(this.OnEndSelectFoldersByParent);
            }
            if ((this.onSelectFoldersByParentCompletedDelegate == null)) {
                this.onSelectFoldersByParentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectFoldersByParentCompleted);
            }
            base.InvokeAsync(this.onBeginSelectFoldersByParentDelegate, new object[] {
                        parentId,
                        createdByIsoId,
                        s1,
                        s2}, this.onEndSelectFoldersByParentDelegate, this.onSelectFoldersByParentCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.fileInfo[] SelectFilesByFolder(int folderId, string s1, string s2) {
            return base.Channel.SelectFilesByFolder(folderId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSelectFilesByFolder(int folderId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectFilesByFolder(folderId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.fileInfo[] EndSelectFilesByFolder(System.IAsyncResult result) {
            return base.Channel.EndSelectFilesByFolder(result);
        }
        
        private System.IAsyncResult OnBeginSelectFilesByFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int folderId = ((int)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginSelectFilesByFolder(folderId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSelectFilesByFolder(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.fileInfo[] retVal = this.EndSelectFilesByFolder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectFilesByFolderCompleted(object state) {
            if ((this.SelectFilesByFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectFilesByFolderCompleted(this, new SelectFilesByFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectFilesByFolderAsync(int folderId, string s1, string s2) {
            this.SelectFilesByFolderAsync(folderId, s1, s2, null);
        }
        
        public void SelectFilesByFolderAsync(int folderId, string s1, string s2, object userState) {
            if ((this.onBeginSelectFilesByFolderDelegate == null)) {
                this.onBeginSelectFilesByFolderDelegate = new BeginOperationDelegate(this.OnBeginSelectFilesByFolder);
            }
            if ((this.onEndSelectFilesByFolderDelegate == null)) {
                this.onEndSelectFilesByFolderDelegate = new EndOperationDelegate(this.OnEndSelectFilesByFolder);
            }
            if ((this.onSelectFilesByFolderCompletedDelegate == null)) {
                this.onSelectFilesByFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectFilesByFolderCompleted);
            }
            base.InvokeAsync(this.onBeginSelectFilesByFolderDelegate, new object[] {
                        folderId,
                        s1,
                        s2}, this.onEndSelectFilesByFolderDelegate, this.onSelectFilesByFolderCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.fileInfo[] SelectFilesByFolder2(int folderId, int skip, int take, string s1, string s2) {
            return base.Channel.SelectFilesByFolder2(folderId, skip, take, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSelectFilesByFolder2(int folderId, int skip, int take, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectFilesByFolder2(folderId, skip, take, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.fileInfo[] EndSelectFilesByFolder2(System.IAsyncResult result) {
            return base.Channel.EndSelectFilesByFolder2(result);
        }
        
        private System.IAsyncResult OnBeginSelectFilesByFolder2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int folderId = ((int)(inValues[0]));
            int skip = ((int)(inValues[1]));
            int take = ((int)(inValues[2]));
            string s1 = ((string)(inValues[3]));
            string s2 = ((string)(inValues[4]));
            return this.BeginSelectFilesByFolder2(folderId, skip, take, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSelectFilesByFolder2(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.fileInfo[] retVal = this.EndSelectFilesByFolder2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectFilesByFolder2Completed(object state) {
            if ((this.SelectFilesByFolder2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectFilesByFolder2Completed(this, new SelectFilesByFolder2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectFilesByFolder2Async(int folderId, int skip, int take, string s1, string s2) {
            this.SelectFilesByFolder2Async(folderId, skip, take, s1, s2, null);
        }
        
        public void SelectFilesByFolder2Async(int folderId, int skip, int take, string s1, string s2, object userState) {
            if ((this.onBeginSelectFilesByFolder2Delegate == null)) {
                this.onBeginSelectFilesByFolder2Delegate = new BeginOperationDelegate(this.OnBeginSelectFilesByFolder2);
            }
            if ((this.onEndSelectFilesByFolder2Delegate == null)) {
                this.onEndSelectFilesByFolder2Delegate = new EndOperationDelegate(this.OnEndSelectFilesByFolder2);
            }
            if ((this.onSelectFilesByFolder2CompletedDelegate == null)) {
                this.onSelectFilesByFolder2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectFilesByFolder2Completed);
            }
            base.InvokeAsync(this.onBeginSelectFilesByFolder2Delegate, new object[] {
                        folderId,
                        skip,
                        take,
                        s1,
                        s2}, this.onEndSelectFilesByFolder2Delegate, this.onSelectFilesByFolder2CompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.file2Info[] SelectCoversByFolder(int folderId, string s1, string s2) {
            return base.Channel.SelectCoversByFolder(folderId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSelectCoversByFolder(int folderId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectCoversByFolder(folderId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.file2Info[] EndSelectCoversByFolder(System.IAsyncResult result) {
            return base.Channel.EndSelectCoversByFolder(result);
        }
        
        private System.IAsyncResult OnBeginSelectCoversByFolder(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int folderId = ((int)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginSelectCoversByFolder(folderId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSelectCoversByFolder(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.file2Info[] retVal = this.EndSelectCoversByFolder(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectCoversByFolderCompleted(object state) {
            if ((this.SelectCoversByFolderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectCoversByFolderCompleted(this, new SelectCoversByFolderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectCoversByFolderAsync(int folderId, string s1, string s2) {
            this.SelectCoversByFolderAsync(folderId, s1, s2, null);
        }
        
        public void SelectCoversByFolderAsync(int folderId, string s1, string s2, object userState) {
            if ((this.onBeginSelectCoversByFolderDelegate == null)) {
                this.onBeginSelectCoversByFolderDelegate = new BeginOperationDelegate(this.OnBeginSelectCoversByFolder);
            }
            if ((this.onEndSelectCoversByFolderDelegate == null)) {
                this.onEndSelectCoversByFolderDelegate = new EndOperationDelegate(this.OnEndSelectCoversByFolder);
            }
            if ((this.onSelectCoversByFolderCompletedDelegate == null)) {
                this.onSelectCoversByFolderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectCoversByFolderCompleted);
            }
            base.InvokeAsync(this.onBeginSelectCoversByFolderDelegate, new object[] {
                        folderId,
                        s1,
                        s2}, this.onEndSelectCoversByFolderDelegate, this.onSelectCoversByFolderCompletedDelegate, userState);
        }
        
        public byte[] SelectFileById(int fileId, bool isVoucher, bool signed, int startFrom, string s1, string s2) {
            return base.Channel.SelectFileById(fileId, isVoucher, signed, startFrom, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSelectFileById(int fileId, bool isVoucher, bool signed, int startFrom, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelectFileById(fileId, isVoucher, signed, startFrom, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndSelectFileById(System.IAsyncResult result) {
            return base.Channel.EndSelectFileById(result);
        }
        
        private System.IAsyncResult OnBeginSelectFileById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int fileId = ((int)(inValues[0]));
            bool isVoucher = ((bool)(inValues[1]));
            bool signed = ((bool)(inValues[2]));
            int startFrom = ((int)(inValues[3]));
            string s1 = ((string)(inValues[4]));
            string s2 = ((string)(inValues[5]));
            return this.BeginSelectFileById(fileId, isVoucher, signed, startFrom, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndSelectFileById(System.IAsyncResult result) {
            byte[] retVal = this.EndSelectFileById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectFileByIdCompleted(object state) {
            if ((this.SelectFileByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectFileByIdCompleted(this, new SelectFileByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectFileByIdAsync(int fileId, bool isVoucher, bool signed, int startFrom, string s1, string s2) {
            this.SelectFileByIdAsync(fileId, isVoucher, signed, startFrom, s1, s2, null);
        }
        
        public void SelectFileByIdAsync(int fileId, bool isVoucher, bool signed, int startFrom, string s1, string s2, object userState) {
            if ((this.onBeginSelectFileByIdDelegate == null)) {
                this.onBeginSelectFileByIdDelegate = new BeginOperationDelegate(this.OnBeginSelectFileById);
            }
            if ((this.onEndSelectFileByIdDelegate == null)) {
                this.onEndSelectFileByIdDelegate = new EndOperationDelegate(this.OnEndSelectFileById);
            }
            if ((this.onSelectFileByIdCompletedDelegate == null)) {
                this.onSelectFileByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectFileByIdCompleted);
            }
            base.InvokeAsync(this.onBeginSelectFileByIdDelegate, new object[] {
                        fileId,
                        isVoucher,
                        signed,
                        startFrom,
                        s1,
                        s2}, this.onEndSelectFileByIdDelegate, this.onSelectFileByIdCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.UpdateFileInfo[] GetVersionInfo(string currentVersion, string s1, string s2) {
            return base.Channel.GetVersionInfo(currentVersion, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVersionInfo(string currentVersion, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVersionInfo(currentVersion, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.UpdateFileInfo[] EndGetVersionInfo(System.IAsyncResult result) {
            return base.Channel.EndGetVersionInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetVersionInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string currentVersion = ((string)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginGetVersionInfo(currentVersion, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndGetVersionInfo(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.UpdateFileInfo[] retVal = this.EndGetVersionInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVersionInfoCompleted(object state) {
            if ((this.GetVersionInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVersionInfoCompleted(this, new GetVersionInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVersionInfoAsync(string currentVersion, string s1, string s2) {
            this.GetVersionInfoAsync(currentVersion, s1, s2, null);
        }
        
        public void GetVersionInfoAsync(string currentVersion, string s1, string s2, object userState) {
            if ((this.onBeginGetVersionInfoDelegate == null)) {
                this.onBeginGetVersionInfoDelegate = new BeginOperationDelegate(this.OnBeginGetVersionInfo);
            }
            if ((this.onEndGetVersionInfoDelegate == null)) {
                this.onEndGetVersionInfoDelegate = new EndOperationDelegate(this.OnEndGetVersionInfo);
            }
            if ((this.onGetVersionInfoCompletedDelegate == null)) {
                this.onGetVersionInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVersionInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetVersionInfoDelegate, new object[] {
                        currentVersion,
                        s1,
                        s2}, this.onEndGetVersionInfoDelegate, this.onGetVersionInfoCompletedDelegate, userState);
        }
        
        public byte[] ReadVersionFile(string fileName, long from, string s1, string s2) {
            return base.Channel.ReadVersionFile(fileName, from, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReadVersionFile(string fileName, long from, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReadVersionFile(fileName, from, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndReadVersionFile(System.IAsyncResult result) {
            return base.Channel.EndReadVersionFile(result);
        }
        
        private System.IAsyncResult OnBeginReadVersionFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string fileName = ((string)(inValues[0]));
            long from = ((long)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginReadVersionFile(fileName, from, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndReadVersionFile(System.IAsyncResult result) {
            byte[] retVal = this.EndReadVersionFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReadVersionFileCompleted(object state) {
            if ((this.ReadVersionFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReadVersionFileCompleted(this, new ReadVersionFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReadVersionFileAsync(string fileName, long from, string s1, string s2) {
            this.ReadVersionFileAsync(fileName, from, s1, s2, null);
        }
        
        public void ReadVersionFileAsync(string fileName, long from, string s1, string s2, object userState) {
            if ((this.onBeginReadVersionFileDelegate == null)) {
                this.onBeginReadVersionFileDelegate = new BeginOperationDelegate(this.OnBeginReadVersionFile);
            }
            if ((this.onEndReadVersionFileDelegate == null)) {
                this.onEndReadVersionFileDelegate = new EndOperationDelegate(this.OnEndReadVersionFile);
            }
            if ((this.onReadVersionFileCompletedDelegate == null)) {
                this.onReadVersionFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReadVersionFileCompleted);
            }
            base.InvokeAsync(this.onBeginReadVersionFileDelegate, new object[] {
                        fileName,
                        from,
                        s1,
                        s2}, this.onEndReadVersionFileDelegate, this.onReadVersionFileCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.TransferFileInfo[] GetTransferFile(int countryId, int beginNumber, int endNumber, string siteCode, string s1, string s2) {
            return base.Channel.GetTransferFile(countryId, beginNumber, endNumber, siteCode, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTransferFile(int countryId, int beginNumber, int endNumber, string siteCode, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTransferFile(countryId, beginNumber, endNumber, siteCode, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.TransferFileInfo[] EndGetTransferFile(System.IAsyncResult result) {
            return base.Channel.EndGetTransferFile(result);
        }
        
        private System.IAsyncResult OnBeginGetTransferFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            int beginNumber = ((int)(inValues[1]));
            int endNumber = ((int)(inValues[2]));
            string siteCode = ((string)(inValues[3]));
            string s1 = ((string)(inValues[4]));
            string s2 = ((string)(inValues[5]));
            return this.BeginGetTransferFile(countryId, beginNumber, endNumber, siteCode, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndGetTransferFile(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.TransferFileInfo[] retVal = this.EndGetTransferFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTransferFileCompleted(object state) {
            if ((this.GetTransferFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTransferFileCompleted(this, new GetTransferFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTransferFileAsync(int countryId, int beginNumber, int endNumber, string siteCode, string s1, string s2) {
            this.GetTransferFileAsync(countryId, beginNumber, endNumber, siteCode, s1, s2, null);
        }
        
        public void GetTransferFileAsync(int countryId, int beginNumber, int endNumber, string siteCode, string s1, string s2, object userState) {
            if ((this.onBeginGetTransferFileDelegate == null)) {
                this.onBeginGetTransferFileDelegate = new BeginOperationDelegate(this.OnBeginGetTransferFile);
            }
            if ((this.onEndGetTransferFileDelegate == null)) {
                this.onEndGetTransferFileDelegate = new EndOperationDelegate(this.OnEndGetTransferFile);
            }
            if ((this.onGetTransferFileCompletedDelegate == null)) {
                this.onGetTransferFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTransferFileCompleted);
            }
            base.InvokeAsync(this.onBeginGetTransferFileDelegate, new object[] {
                        countryId,
                        beginNumber,
                        endNumber,
                        siteCode,
                        s1,
                        s2}, this.onEndGetTransferFileDelegate, this.onGetTransferFileCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 FindVoucherTRSByVoucherNumber(int countryId, int voucherId, string s1, string s2) {
            return base.Channel.FindVoucherTRSByVoucherNumber(countryId, voucherId, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindVoucherTRSByVoucherNumber(int countryId, int voucherId, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindVoucherTRSByVoucherNumber(countryId, voucherId, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 EndFindVoucherTRSByVoucherNumber(System.IAsyncResult result) {
            return base.Channel.EndFindVoucherTRSByVoucherNumber(result);
        }
        
        private System.IAsyncResult OnBeginFindVoucherTRSByVoucherNumber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            int voucherId = ((int)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginFindVoucherTRSByVoucherNumber(countryId, voucherId, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndFindVoucherTRSByVoucherNumber(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.VoucherInfo3 retVal = this.EndFindVoucherTRSByVoucherNumber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindVoucherTRSByVoucherNumberCompleted(object state) {
            if ((this.FindVoucherTRSByVoucherNumberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindVoucherTRSByVoucherNumberCompleted(this, new FindVoucherTRSByVoucherNumberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindVoucherTRSByVoucherNumberAsync(int countryId, int voucherId, string s1, string s2) {
            this.FindVoucherTRSByVoucherNumberAsync(countryId, voucherId, s1, s2, null);
        }
        
        public void FindVoucherTRSByVoucherNumberAsync(int countryId, int voucherId, string s1, string s2, object userState) {
            if ((this.onBeginFindVoucherTRSByVoucherNumberDelegate == null)) {
                this.onBeginFindVoucherTRSByVoucherNumberDelegate = new BeginOperationDelegate(this.OnBeginFindVoucherTRSByVoucherNumber);
            }
            if ((this.onEndFindVoucherTRSByVoucherNumberDelegate == null)) {
                this.onEndFindVoucherTRSByVoucherNumberDelegate = new EndOperationDelegate(this.OnEndFindVoucherTRSByVoucherNumber);
            }
            if ((this.onFindVoucherTRSByVoucherNumberCompletedDelegate == null)) {
                this.onFindVoucherTRSByVoucherNumberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindVoucherTRSByVoucherNumberCompleted);
            }
            base.InvokeAsync(this.onBeginFindVoucherTRSByVoucherNumberDelegate, new object[] {
                        countryId,
                        voucherId,
                        s1,
                        s2}, this.onEndFindVoucherTRSByVoucherNumberDelegate, this.onFindVoucherTRSByVoucherNumberCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 FindVoucherTRSBySiteCode(string siteCode, int location, string s1, string s2) {
            return base.Channel.FindVoucherTRSBySiteCode(siteCode, location, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindVoucherTRSBySiteCode(string siteCode, int location, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindVoucherTRSBySiteCode(siteCode, location, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 EndFindVoucherTRSBySiteCode(System.IAsyncResult result) {
            return base.Channel.EndFindVoucherTRSBySiteCode(result);
        }
        
        private System.IAsyncResult OnBeginFindVoucherTRSBySiteCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string siteCode = ((string)(inValues[0]));
            int location = ((int)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginFindVoucherTRSBySiteCode(siteCode, location, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndFindVoucherTRSBySiteCode(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.VoucherInfo3 retVal = this.EndFindVoucherTRSBySiteCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindVoucherTRSBySiteCodeCompleted(object state) {
            if ((this.FindVoucherTRSBySiteCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindVoucherTRSBySiteCodeCompleted(this, new FindVoucherTRSBySiteCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindVoucherTRSBySiteCodeAsync(string siteCode, int location, string s1, string s2) {
            this.FindVoucherTRSBySiteCodeAsync(siteCode, location, s1, s2, null);
        }
        
        public void FindVoucherTRSBySiteCodeAsync(string siteCode, int location, string s1, string s2, object userState) {
            if ((this.onBeginFindVoucherTRSBySiteCodeDelegate == null)) {
                this.onBeginFindVoucherTRSBySiteCodeDelegate = new BeginOperationDelegate(this.OnBeginFindVoucherTRSBySiteCode);
            }
            if ((this.onEndFindVoucherTRSBySiteCodeDelegate == null)) {
                this.onEndFindVoucherTRSBySiteCodeDelegate = new EndOperationDelegate(this.OnEndFindVoucherTRSBySiteCode);
            }
            if ((this.onFindVoucherTRSBySiteCodeCompletedDelegate == null)) {
                this.onFindVoucherTRSBySiteCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindVoucherTRSBySiteCodeCompleted);
            }
            base.InvokeAsync(this.onBeginFindVoucherTRSBySiteCodeDelegate, new object[] {
                        siteCode,
                        location,
                        s1,
                        s2}, this.onEndFindVoucherTRSBySiteCodeDelegate, this.onFindVoucherTRSBySiteCodeCompletedDelegate, userState);
        }
        
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 FindVoucherPRBySiteCode(string siteCode, int location, string s1, string s2) {
            return base.Channel.FindVoucherPRBySiteCode(siteCode, location, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFindVoucherPRBySiteCode(string siteCode, int location, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindVoucherPRBySiteCode(siteCode, location, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public FintraxPTFImages.ScanServiceRef.VoucherInfo3 EndFindVoucherPRBySiteCode(System.IAsyncResult result) {
            return base.Channel.EndFindVoucherPRBySiteCode(result);
        }
        
        private System.IAsyncResult OnBeginFindVoucherPRBySiteCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string siteCode = ((string)(inValues[0]));
            int location = ((int)(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginFindVoucherPRBySiteCode(siteCode, location, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndFindVoucherPRBySiteCode(System.IAsyncResult result) {
            FintraxPTFImages.ScanServiceRef.VoucherInfo3 retVal = this.EndFindVoucherPRBySiteCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindVoucherPRBySiteCodeCompleted(object state) {
            if ((this.FindVoucherPRBySiteCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindVoucherPRBySiteCodeCompleted(this, new FindVoucherPRBySiteCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindVoucherPRBySiteCodeAsync(string siteCode, int location, string s1, string s2) {
            this.FindVoucherPRBySiteCodeAsync(siteCode, location, s1, s2, null);
        }
        
        public void FindVoucherPRBySiteCodeAsync(string siteCode, int location, string s1, string s2, object userState) {
            if ((this.onBeginFindVoucherPRBySiteCodeDelegate == null)) {
                this.onBeginFindVoucherPRBySiteCodeDelegate = new BeginOperationDelegate(this.OnBeginFindVoucherPRBySiteCode);
            }
            if ((this.onEndFindVoucherPRBySiteCodeDelegate == null)) {
                this.onEndFindVoucherPRBySiteCodeDelegate = new EndOperationDelegate(this.OnEndFindVoucherPRBySiteCode);
            }
            if ((this.onFindVoucherPRBySiteCodeCompletedDelegate == null)) {
                this.onFindVoucherPRBySiteCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindVoucherPRBySiteCodeCompleted);
            }
            base.InvokeAsync(this.onBeginFindVoucherPRBySiteCodeDelegate, new object[] {
                        siteCode,
                        location,
                        s1,
                        s2}, this.onEndFindVoucherPRBySiteCodeDelegate, this.onFindVoucherPRBySiteCodeCompletedDelegate, userState);
        }
        
        public byte[] DownloadReport(string rServerUrl, string s1, string s2) {
            return base.Channel.DownloadReport(rServerUrl, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadReport(string rServerUrl, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadReport(rServerUrl, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndDownloadReport(System.IAsyncResult result) {
            return base.Channel.EndDownloadReport(result);
        }
        
        private System.IAsyncResult OnBeginDownloadReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rServerUrl = ((string)(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginDownloadReport(rServerUrl, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndDownloadReport(System.IAsyncResult result) {
            byte[] retVal = this.EndDownloadReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadReportCompleted(object state) {
            if ((this.DownloadReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadReportCompleted(this, new DownloadReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadReportAsync(string rServerUrl, string s1, string s2) {
            this.DownloadReportAsync(rServerUrl, s1, s2, null);
        }
        
        public void DownloadReportAsync(string rServerUrl, string s1, string s2, object userState) {
            if ((this.onBeginDownloadReportDelegate == null)) {
                this.onBeginDownloadReportDelegate = new BeginOperationDelegate(this.OnBeginDownloadReport);
            }
            if ((this.onEndDownloadReportDelegate == null)) {
                this.onEndDownloadReportDelegate = new EndOperationDelegate(this.OnEndDownloadReport);
            }
            if ((this.onDownloadReportCompletedDelegate == null)) {
                this.onDownloadReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadReportCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadReportDelegate, new object[] {
                        rServerUrl,
                        s1,
                        s2}, this.onEndDownloadReportDelegate, this.onDownloadReportCompletedDelegate, userState);
        }
        
        public byte[] DownloadVouchers(int countryId, int[] voucherIds, string s1, string s2) {
            return base.Channel.DownloadVouchers(countryId, voucherIds, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadVouchers(int countryId, int[] voucherIds, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadVouchers(countryId, voucherIds, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndDownloadVouchers(System.IAsyncResult result) {
            return base.Channel.EndDownloadVouchers(result);
        }
        
        private System.IAsyncResult OnBeginDownloadVouchers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int countryId = ((int)(inValues[0]));
            int[] voucherIds = ((int[])(inValues[1]));
            string s1 = ((string)(inValues[2]));
            string s2 = ((string)(inValues[3]));
            return this.BeginDownloadVouchers(countryId, voucherIds, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndDownloadVouchers(System.IAsyncResult result) {
            byte[] retVal = this.EndDownloadVouchers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadVouchersCompleted(object state) {
            if ((this.DownloadVouchersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadVouchersCompleted(this, new DownloadVouchersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadVouchersAsync(int countryId, int[] voucherIds, string s1, string s2) {
            this.DownloadVouchersAsync(countryId, voucherIds, s1, s2, null);
        }
        
        public void DownloadVouchersAsync(int countryId, int[] voucherIds, string s1, string s2, object userState) {
            if ((this.onBeginDownloadVouchersDelegate == null)) {
                this.onBeginDownloadVouchersDelegate = new BeginOperationDelegate(this.OnBeginDownloadVouchers);
            }
            if ((this.onEndDownloadVouchersDelegate == null)) {
                this.onEndDownloadVouchersDelegate = new EndOperationDelegate(this.OnEndDownloadVouchers);
            }
            if ((this.onDownloadVouchersCompletedDelegate == null)) {
                this.onDownloadVouchersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadVouchersCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadVouchersDelegate, new object[] {
                        countryId,
                        voucherIds,
                        s1,
                        s2}, this.onEndDownloadVouchersDelegate, this.onDownloadVouchersCompletedDelegate, userState);
        }
        
        public void EmailNotaDebito(FintraxPTFImages.ScanServiceRef.EmailInfo[] emails, string s1, string s2) {
            base.Channel.EmailNotaDebito(emails, s1, s2);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEmailNotaDebito(FintraxPTFImages.ScanServiceRef.EmailInfo[] emails, string s1, string s2, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEmailNotaDebito(emails, s1, s2, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndEmailNotaDebito(System.IAsyncResult result) {
            base.Channel.EndEmailNotaDebito(result);
        }
        
        private System.IAsyncResult OnBeginEmailNotaDebito(object[] inValues, System.AsyncCallback callback, object asyncState) {
            FintraxPTFImages.ScanServiceRef.EmailInfo[] emails = ((FintraxPTFImages.ScanServiceRef.EmailInfo[])(inValues[0]));
            string s1 = ((string)(inValues[1]));
            string s2 = ((string)(inValues[2]));
            return this.BeginEmailNotaDebito(emails, s1, s2, callback, asyncState);
        }
        
        private object[] OnEndEmailNotaDebito(System.IAsyncResult result) {
            this.EndEmailNotaDebito(result);
            return null;
        }
        
        private void OnEmailNotaDebitoCompleted(object state) {
            if ((this.EmailNotaDebitoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EmailNotaDebitoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EmailNotaDebitoAsync(FintraxPTFImages.ScanServiceRef.EmailInfo[] emails, string s1, string s2) {
            this.EmailNotaDebitoAsync(emails, s1, s2, null);
        }
        
        public void EmailNotaDebitoAsync(FintraxPTFImages.ScanServiceRef.EmailInfo[] emails, string s1, string s2, object userState) {
            if ((this.onBeginEmailNotaDebitoDelegate == null)) {
                this.onBeginEmailNotaDebitoDelegate = new BeginOperationDelegate(this.OnBeginEmailNotaDebito);
            }
            if ((this.onEndEmailNotaDebitoDelegate == null)) {
                this.onEndEmailNotaDebitoDelegate = new EndOperationDelegate(this.OnEndEmailNotaDebito);
            }
            if ((this.onEmailNotaDebitoCompletedDelegate == null)) {
                this.onEmailNotaDebitoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEmailNotaDebitoCompleted);
            }
            base.InvokeAsync(this.onBeginEmailNotaDebitoDelegate, new object[] {
                        emails,
                        s1,
                        s2}, this.onEndEmailNotaDebitoDelegate, this.onEmailNotaDebitoCompletedDelegate, userState);
        }
    }
}
