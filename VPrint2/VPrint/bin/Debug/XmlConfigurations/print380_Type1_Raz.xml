<?xml version="1.0" encoding="utf-8"?>
<!-- FORMAT 1 (ITALY)-->
<VoucherPrintLayoutRaz xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <DocumentInitialization />
  <FormLength>49</FormLength>
  <!-- Name of the template. Should be unique for the system. -->
  <TemplateName>11D8F4C7-CB6E-4B61-8768-5273313B1AFA</TemplateName>
  <Context>
    <![CDATA[
@{
    //Please no code into the body tag!
    //Only variables
    //CONSTANTS
    const string COL1 = "<ht><nbsp><nbsp><nbsp><nbsp><nbsp><nbsp>"; 
    var length = string.Concat(   MTPL.PUMOn(true),
                                  MTPL.SetPositionalUnitMode(SSU.Millimeters),
                                  MTPL.SetFormLength(6119));
    var small = MTPL.SetFontDensity(Cpi._12);
    var normal = MTPL.SetFontDensity(Cpi._10);
    var POS00 = MTPL.SetAbsoluteVerticalPosition(0);
    
    //BARCODE
    var id = Model.Retailer.Id;
    var barcodeNumber = Model.StrVoucherNo.Replace(" ", "").Substring(3);    
    var barcode = string.Concat(  MTPL.SetAbsoluteHorizontalPosition(2800),
                                  MTPL.PrintI2Of5Barcode(barcodeNumber, 2, "000"));
                  
    var barcodeText = string.Concat(  MTPL.SetAbsoluteHorizontalPosition(3100),
                                      Model.StrVoucherNo.Replace(" ", ""));
    
    //RETAILER
    var shopName = Model.Retailer.Name;
    var voucherNumber = string.Concat(Model.VoucherNo, Model.Printing.CalculateCheckDigit(Model.VoucherNo));   
    var line1 = Model.Retailer.RetailAddress.Line1;
    var line2 = Model.Retailer.RetailAddress.Line2;
    var line3 = Model.Retailer.RetailAddress.Line3;
    var line5 = Model.Retailer.RetailAddress.Line5;
    
    var officeData = Model.Manager.RetrieveTableData("ho_pfs, ho_Certificate_1, ho_Certificate_2, ho_Certificate_3, ho_category_title,ho_add_id", "HeadOffice", 
        "where ho_id={0} and ho_iso_id={1}".format(Model.Retailer.HeadOfficeId, Model.Office.CountryId));
    var branchData = Model.Manager.RetrieveTableData("br_category, br_pfs", "Branch", 
        "where br_id={0} and br_iso_id={1}".format(Model.Retailer.Id, Model.Retailer.CountryId));
    
    //OFFICE
    var officeName = Convert.ToString( Model.Manager.RetrieveTableData("ho_trading_name", "HeadOffice",
        "where ho_id={0} and ho_iso_id={1}".format(Model.Retailer.HeadOfficeId, Model.Retailer.CountryId)).FirstOrDefault()).EscapeXml();
        
    var hoData = Model.Manager.RetrieveTableData("hoa_add_1,hoa_add_2,hoa_add_3,hoa_add_4,hoa_add_5,hoa_add_6", "HeadOfficeAddress", 
        "where hoa_id = {0} ".format(officeData[5]));
    var oLine1 = Convert.ToString(hoData[0]);
    var oLine2 = Convert.ToString(hoData[1]);
    var oLine3 = Convert.ToString(hoData[2]);
    var oLine5 = Convert.ToString(hoData[4]);
    
    //CERTIFICATES
    var opfs = string.Concat("C.F.:", branchData[1]);
    var certificate1 = string.Concat("Reg.Imp.:", officeData[1]);
    var certificate2 = string.Concat("Cap.Soc.:", officeData[2]);
    var certificate3 = string.Concat("N.Rea : ", officeData[3]);
    var category = Convert.ToString(officeData[4]);
    var vatNumber = string.Concat("P.IVA:", Model.Retailer.VatNumber);
}    
<body>
  @length
  @barcode<br>
  @barcodeText<br>
  @POS00@small<br>
  @COL1@normal@shopName<br>@small
  @COL1@string.Format("{0,-30}",line1)<br>
  @COL1@string.Format("{0,-30}",string.Concat(line5, "-", line3))<br>
  @COL1@string.Format("{0,-30}",officeName)<br>  
  @COL1@string.Format("{0,-30}",oLine1)<nbsp>@string.Format("{0,-30}", certificate1)<ht>@id<br>
  @COL1@string.Format("{0,-30}",string.Concat(oLine5, "-", oLine3))<nbsp>@certificate2<br>
  @COL1@string.Format("{0,-30}",opfs)<nbsp>@string.Format("{0,-30}", certificate3)<br>
  @COL1@string.Format("{0,-30}",vatNumber)<br>
  @normal
</body>
]]>
  </Context>
</VoucherPrintLayoutRaz>