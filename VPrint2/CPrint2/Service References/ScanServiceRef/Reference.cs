//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPrint2.ScanServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class MyApplicationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherInfo2", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class VoucherInfo2 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoucherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsoId {
            get {
                return this.IsoIdField;
            }
            set {
                if ((this.IsoIdField.Equals(value) != true)) {
                    this.IsoIdField = value;
                    this.RaisePropertyChanged("IsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerId {
            get {
                return this.RetailerIdField;
            }
            set {
                if ((this.RetailerIdField.Equals(value) != true)) {
                    this.RetailerIdField = value;
                    this.RaisePropertyChanged("RetailerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VoucherId {
            get {
                return this.VoucherIdField;
            }
            set {
                if ((this.VoucherIdField.Equals(value) != true)) {
                    this.VoucherIdField = value;
                    this.RaisePropertyChanged("VoucherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoucherInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class VoucherInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BarCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ScanDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string BarCode {
            get {
                return this.BarCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BarCodeField, value) != true)) {
                    this.BarCodeField = value;
                    this.RaisePropertyChanged("BarCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.DateTime ScanDate {
            get {
                return this.ScanDateField;
            }
            set {
                if ((this.ScanDateField.Equals(value) != true)) {
                    this.ScanDateField = value;
                    this.RaisePropertyChanged("ScanDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int OperatorId {
            get {
                return this.OperatorIdField;
            }
            set {
                if ((this.OperatorIdField.Equals(value) != true)) {
                    this.OperatorIdField = value;
                    this.RaisePropertyChanged("OperatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationHistory", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    public enum OperationHistory : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NA = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Login = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Logout = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Print = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RePrint = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scan = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Coversheet = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DispatchVoucher = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetupPrint = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SetupScan = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ShowScannedImage = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintLayoutUpdate = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ScanLayoutUpdate = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderAdded = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderRenamed = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FolderDeleted = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileDeleted = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllFilesDeleted = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileDownloaded = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CoverFileDownloaded = 250,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 127,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HistoryByCountryInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class HistoryByCountryInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CPrint2.ScanServiceRef.OperationHistory OperTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrIsoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int V2IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DetailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsoId {
            get {
                return this.IsoIdField;
            }
            set {
                if ((this.IsoIdField.Equals(value) != true)) {
                    this.IsoIdField = value;
                    this.RaisePropertyChanged("IsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public CPrint2.ScanServiceRef.OperationHistory OperType {
            get {
                return this.OperTypeField;
            }
            set {
                if ((this.OperTypeField.Equals(value) != true)) {
                    this.OperTypeField = value;
                    this.RaisePropertyChanged("OperType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int BrIsoId {
            get {
                return this.BrIsoIdField;
            }
            set {
                if ((this.BrIsoIdField.Equals(value) != true)) {
                    this.BrIsoIdField = value;
                    this.RaisePropertyChanged("BrIsoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public int BrId {
            get {
                return this.BrIdField;
            }
            set {
                if ((this.BrIdField.Equals(value) != true)) {
                    this.BrIdField = value;
                    this.RaisePropertyChanged("BrId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int VID {
            get {
                return this.VIDField;
            }
            set {
                if ((this.VIDField.Equals(value) != true)) {
                    this.VIDField = value;
                    this.RaisePropertyChanged("VID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int V2ID {
            get {
                return this.V2IDField;
            }
            set {
                if ((this.V2IDField.Equals(value) != true)) {
                    this.V2IDField = value;
                    this.RaisePropertyChanged("V2ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public System.Guid SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RetailerPrinterInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class RetailerPrinterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeadOfficeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormatTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrinterPathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HeadOfficeId {
            get {
                return this.HeadOfficeIdField;
            }
            set {
                if ((this.HeadOfficeIdField.Equals(value) != true)) {
                    this.HeadOfficeIdField = value;
                    this.RaisePropertyChanged("HeadOfficeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RetailerId {
            get {
                return this.RetailerIdField;
            }
            set {
                if ((this.RetailerIdField.Equals(value) != true)) {
                    this.RetailerIdField = value;
                    this.RaisePropertyChanged("RetailerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int FormatId {
            get {
                return this.FormatIdField;
            }
            set {
                if ((this.FormatIdField.Equals(value) != true)) {
                    this.FormatIdField = value;
                    this.RaisePropertyChanged("FormatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string FormatName {
            get {
                return this.FormatNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatNameField, value) != true)) {
                    this.FormatNameField = value;
                    this.RaisePropertyChanged("FormatName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string FormatType {
            get {
                return this.FormatTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FormatTypeField, value) != true)) {
                    this.FormatTypeField = value;
                    this.RaisePropertyChanged("FormatType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string PrinterPath {
            get {
                return this.PrinterPathField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterPathField, value) != true)) {
                    this.PrinterPathField = value;
                    this.RaisePropertyChanged("PrinterPath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="fileInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class fileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RetailerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoucherIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((this.FolderIdField.Equals(value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int RetailerId {
            get {
                return this.RetailerIdField;
            }
            set {
                if ((this.RetailerIdField.Equals(value) != true)) {
                    this.RetailerIdField = value;
                    this.RaisePropertyChanged("RetailerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int VoucherId {
            get {
                return this.VoucherIdField;
            }
            set {
                if ((this.VoucherIdField.Equals(value) != true)) {
                    this.VoucherIdField = value;
                    this.RaisePropertyChanged("VoucherId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string SiteCode {
            get {
                return this.SiteCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteCodeField, value) != true)) {
                    this.SiteCodeField = value;
                    this.RaisePropertyChanged("SiteCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FolderInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class FolderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<int> ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="file2Info", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class file2Info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FolderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OperatorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int FolderId {
            get {
                return this.FolderIdField;
            }
            set {
                if ((this.FolderIdField.Equals(value) != true)) {
                    this.FolderIdField = value;
                    this.RaisePropertyChanged("FolderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                if ((this.CountryIDField.Equals(value) != true)) {
                    this.CountryIDField = value;
                    this.RaisePropertyChanged("CountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int Location {
            get {
                return this.LocationField;
            }
            set {
                if ((this.LocationField.Equals(value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((this.OperatorField.Equals(value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpdateFileInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class UpdateFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferFileInfo", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
    [System.SerializableAttribute()]
    public partial class TransferFileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BranchIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteLocationNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VoucherNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InvNo {
            get {
                return this.InvNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvNoField, value) != true)) {
                    this.InvNoField = value;
                    this.RaisePropertyChanged("InvNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int BranchId {
            get {
                return this.BranchIdField;
            }
            set {
                if ((this.BranchIdField.Equals(value) != true)) {
                    this.BranchIdField = value;
                    this.RaisePropertyChanged("BranchId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string SiteLocationNo {
            get {
                return this.SiteLocationNoField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteLocationNoField, value) != true)) {
                    this.SiteLocationNoField = value;
                    this.RaisePropertyChanged("SiteLocationNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int VoucherNumber {
            get {
                return this.VoucherNumberField;
            }
            set {
                if ((this.VoucherNumberField.Equals(value) != true)) {
                    this.VoucherNumberField = value;
                    this.RaisePropertyChanged("VoucherNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ScanServiceRef.IScanService")]
    public interface IScanService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/Delete", ReplyAction="http://tempuri.org/IScanService/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DeleteMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void Delete(string fileName, int countryId, int retailerId, int voucherId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadVoucherInfo", ReplyAction="http://tempuri.org/IScanService/ReadVoucherInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadVoucherInfoMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.VoucherInfo2 ReadVoucherInfo(int Id, string copyToFolder, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadData", ReplyAction="http://tempuri.org/IScanService/ReadDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadDataMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.VoucherInfo[] ReadData(int countryId, int retailerId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadData2", ReplyAction="http://tempuri.org/IScanService/ReadData2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadData2MyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        byte[] ReadData2(int id, bool isVoucher, int start, int length, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SaveData", ReplyAction="http://tempuri.org/IScanService/SaveDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SaveDataMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void SaveData(string serverDirName, string fileName, byte[] data, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SaveDataAsync", ReplyAction="http://tempuri.org/IScanService/SaveDataAsyncResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SaveDataAsyncMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void SaveDataAsync(string serverDirName, string fileName, byte[] data, long position, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/CommitVoucherChanges", ReplyAction="http://tempuri.org/IScanService/CommitVoucherChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/CommitVoucherChangesMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void CommitVoucherChanges(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/CommitFileChanges", ReplyAction="http://tempuri.org/IScanService/CommitFileChangesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/CommitFileChangesMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void CommitFileChanges(string serverDirName, int countryId, System.Nullable<int> folderId, int locationId, int userId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ValidateVoucher", ReplyAction="http://tempuri.org/IScanService/ValidateVoucherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ValidateVoucherMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void ValidateVoucher(int countryId, bool ss, int retailerId, int voucherId, bool voucherMustExist, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/FindVoucher", ReplyAction="http://tempuri.org/IScanService/FindVoucherResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/FindVoucherMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        string FindVoucher(int countryId, int voucherId, int voucherIdCD, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SaveHistory", ReplyAction="http://tempuri.org/IScanService/SaveHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SaveHistoryMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void SaveHistory(int operatorCountryId, int operatorUserId, CPrint2.ScanServiceRef.OperationHistory operationType, System.Guid operationId, int brIsoId, int brId, int vId, int v2Id, int count, string details, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadHistory", ReplyAction="http://tempuri.org/IScanService/ReadHistoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadHistoryMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.HistoryByCountryInfo[] ReadHistory(int operatorCountryId, System.Nullable<int> operatorUserId, CPrint2.ScanServiceRef.OperationHistory operationType, System.DateTime from, System.DateTime to, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadRetailerPrinterInfo", ReplyAction="http://tempuri.org/IScanService/ReadRetailerPrinterInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadRetailerPrinterInfoMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.RetailerPrinterInfo[] ReadRetailerPrinterInfo(int countryId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFilesBySql", ReplyAction="http://tempuri.org/IScanService/SelectFilesBySqlResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFilesBySqlMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.fileInfo[] SelectFilesBySql(string whereClause, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/AddFolder", ReplyAction="http://tempuri.org/IScanService/AddFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/AddFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void AddFolder(System.Nullable<int> toParentId, string name, int countryId, int userId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/UpdateFolder", ReplyAction="http://tempuri.org/IScanService/UpdateFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/UpdateFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void UpdateFolder(int folderId, string name, System.Nullable<int> parentId, int countryId, int userId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/DeleteFolder", ReplyAction="http://tempuri.org/IScanService/DeleteFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DeleteFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void DeleteFolder(int folderId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/DeleteFile", ReplyAction="http://tempuri.org/IScanService/DeleteFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DeleteFileMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void DeleteFile(int id, bool isVoucher, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/DeleteAllFilesInFolder", ReplyAction="http://tempuri.org/IScanService/DeleteAllFilesInFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/DeleteAllFilesInFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void DeleteAllFilesInFolder(int folderId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/RenameFolder", ReplyAction="http://tempuri.org/IScanService/RenameFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/RenameFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        void RenameFolder(int folderId, string name, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFoldersByParent", ReplyAction="http://tempuri.org/IScanService/SelectFoldersByParentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFoldersByParentMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.FolderInfo[] SelectFoldersByParent(System.Nullable<int> parentId, int createdByIsoId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFilesByFolder", ReplyAction="http://tempuri.org/IScanService/SelectFilesByFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFilesByFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.fileInfo[] SelectFilesByFolder(int folderId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectCoversByFolder", ReplyAction="http://tempuri.org/IScanService/SelectCoversByFolderResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectCoversByFolderMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.file2Info[] SelectCoversByFolder(int folderId, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/SelectFileById", ReplyAction="http://tempuri.org/IScanService/SelectFileByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/SelectFileByIdMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        byte[] SelectFileById(int fileId, bool isVoucher, int startFrom, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/GetVersionInfo", ReplyAction="http://tempuri.org/IScanService/GetVersionInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/GetVersionInfoMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.UpdateFileInfo[] GetVersionInfo(string currentVersion, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/ReadVersionFile", ReplyAction="http://tempuri.org/IScanService/ReadVersionFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/ReadVersionFileMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        byte[] ReadVersionFile(string fileName, long from, string s1, string s2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScanService/GetTransferFile", ReplyAction="http://tempuri.org/IScanService/GetTransferFileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(CPrint2.ScanServiceRef.MyApplicationFault), Action="http://tempuri.org/IScanService/GetTransferFileMyApplicationFaultFault", Name="MyApplicationFault", Namespace="http://schemas.datacontract.org/2004/07/ReceivingServiceLib")]
        CPrint2.ScanServiceRef.TransferFileInfo[] GetTransferFile(int countryId, int beginNumber, int endNumber, string siteCode, string s1, string s2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScanServiceChannel : CPrint2.ScanServiceRef.IScanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScanServiceClient : System.ServiceModel.ClientBase<CPrint2.ScanServiceRef.IScanService>, CPrint2.ScanServiceRef.IScanService {
        
        public ScanServiceClient() {
        }
        
        public ScanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Delete(string fileName, int countryId, int retailerId, int voucherId, string s1, string s2) {
            base.Channel.Delete(fileName, countryId, retailerId, voucherId, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.VoucherInfo2 ReadVoucherInfo(int Id, string copyToFolder, string s1, string s2) {
            return base.Channel.ReadVoucherInfo(Id, copyToFolder, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.VoucherInfo[] ReadData(int countryId, int retailerId, string s1, string s2) {
            return base.Channel.ReadData(countryId, retailerId, s1, s2);
        }
        
        public byte[] ReadData2(int id, bool isVoucher, int start, int length, string s1, string s2) {
            return base.Channel.ReadData2(id, isVoucher, start, length, s1, s2);
        }
        
        public void SaveData(string serverDirName, string fileName, byte[] data, string s1, string s2) {
            base.Channel.SaveData(serverDirName, fileName, data, s1, s2);
        }
        
        public void SaveDataAsync(string serverDirName, string fileName, byte[] data, long position, string s1, string s2) {
            base.Channel.SaveDataAsync(serverDirName, fileName, data, position, s1, s2);
        }
        
        public void CommitVoucherChanges(string serverDirName, int jobId, int countryId, int retailerId, int voucherId, System.Nullable<int> folderId, string siteCode, string barCode, int locationId, int userId, string s1, string s2) {
            base.Channel.CommitVoucherChanges(serverDirName, jobId, countryId, retailerId, voucherId, folderId, siteCode, barCode, locationId, userId, s1, s2);
        }
        
        public void CommitFileChanges(string serverDirName, int countryId, System.Nullable<int> folderId, int locationId, int userId, string s1, string s2) {
            base.Channel.CommitFileChanges(serverDirName, countryId, folderId, locationId, userId, s1, s2);
        }
        
        public void ValidateVoucher(int countryId, bool ss, int retailerId, int voucherId, bool voucherMustExist, string s1, string s2) {
            base.Channel.ValidateVoucher(countryId, ss, retailerId, voucherId, voucherMustExist, s1, s2);
        }
        
        public string FindVoucher(int countryId, int voucherId, int voucherIdCD, string s1, string s2) {
            return base.Channel.FindVoucher(countryId, voucherId, voucherIdCD, s1, s2);
        }
        
        public void SaveHistory(int operatorCountryId, int operatorUserId, CPrint2.ScanServiceRef.OperationHistory operationType, System.Guid operationId, int brIsoId, int brId, int vId, int v2Id, int count, string details, string s1, string s2) {
            base.Channel.SaveHistory(operatorCountryId, operatorUserId, operationType, operationId, brIsoId, brId, vId, v2Id, count, details, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.HistoryByCountryInfo[] ReadHistory(int operatorCountryId, System.Nullable<int> operatorUserId, CPrint2.ScanServiceRef.OperationHistory operationType, System.DateTime from, System.DateTime to, string s1, string s2) {
            return base.Channel.ReadHistory(operatorCountryId, operatorUserId, operationType, from, to, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.RetailerPrinterInfo[] ReadRetailerPrinterInfo(int countryId, string s1, string s2) {
            return base.Channel.ReadRetailerPrinterInfo(countryId, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.fileInfo[] SelectFilesBySql(string whereClause, string s1, string s2) {
            return base.Channel.SelectFilesBySql(whereClause, s1, s2);
        }
        
        public void AddFolder(System.Nullable<int> toParentId, string name, int countryId, int userId, string s1, string s2) {
            base.Channel.AddFolder(toParentId, name, countryId, userId, s1, s2);
        }
        
        public void UpdateFolder(int folderId, string name, System.Nullable<int> parentId, int countryId, int userId, string s1, string s2) {
            base.Channel.UpdateFolder(folderId, name, parentId, countryId, userId, s1, s2);
        }
        
        public void DeleteFolder(int folderId, string s1, string s2) {
            base.Channel.DeleteFolder(folderId, s1, s2);
        }
        
        public void DeleteFile(int id, bool isVoucher, string s1, string s2) {
            base.Channel.DeleteFile(id, isVoucher, s1, s2);
        }
        
        public void DeleteAllFilesInFolder(int folderId, string s1, string s2) {
            base.Channel.DeleteAllFilesInFolder(folderId, s1, s2);
        }
        
        public void RenameFolder(int folderId, string name, string s1, string s2) {
            base.Channel.RenameFolder(folderId, name, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.FolderInfo[] SelectFoldersByParent(System.Nullable<int> parentId, int createdByIsoId, string s1, string s2) {
            return base.Channel.SelectFoldersByParent(parentId, createdByIsoId, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.fileInfo[] SelectFilesByFolder(int folderId, string s1, string s2) {
            return base.Channel.SelectFilesByFolder(folderId, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.file2Info[] SelectCoversByFolder(int folderId, string s1, string s2) {
            return base.Channel.SelectCoversByFolder(folderId, s1, s2);
        }
        
        public byte[] SelectFileById(int fileId, bool isVoucher, int startFrom, string s1, string s2) {
            return base.Channel.SelectFileById(fileId, isVoucher, startFrom, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.UpdateFileInfo[] GetVersionInfo(string currentVersion, string s1, string s2) {
            return base.Channel.GetVersionInfo(currentVersion, s1, s2);
        }
        
        public byte[] ReadVersionFile(string fileName, long from, string s1, string s2) {
            return base.Channel.ReadVersionFile(fileName, from, s1, s2);
        }
        
        public CPrint2.ScanServiceRef.TransferFileInfo[] GetTransferFile(int countryId, int beginNumber, int endNumber, string siteCode, string s1, string s2) {
            return base.Channel.GetTransferFile(countryId, beginNumber, endNumber, siteCode, s1, s2);
        }
    }
}
